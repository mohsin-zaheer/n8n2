{
  "testName": "User Test",
  "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
  "sessionId": "complete_e2e_user_test_1755441721374",
  "timestamp": "2025-08-17T14:42:01.375Z",
  "duration": 82652,
  "success": true,
  "phases": {
    "discovery": {
      "name": "Discovery",
      "success": true,
      "metrics": {
        "startTime": 1755441721683,
        "endTime": 1755441739744,
        "duration": 18061,
        "memoryUsage": {
          "heapUsed": -637896,
          "heapTotal": 30867456,
          "external": 6429472
        }
      },
      "logs": [
        {
          "timestamp": "2025-08-17T14:42:01.683Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Starting discovery phase"
        },
        {
          "timestamp": "2025-08-17T14:42:01.683Z",
          "level": "DEBUG",
          "source": "Claude",
          "message": "Sending request for discovery phase"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_for_task"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"task\":\"get_api_data\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_for_task"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"task\":\"transform_data\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_for_task"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"task\":\"chat_with_ai\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_for_task"
        },
        {
          "timestamp": "2025-08-17T14:42:11.791Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"task\":\"send_slack_message\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:11.981Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_for_task completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:11.985Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_for_task completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:11.989Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_for_task completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:11.991Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_for_task completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:11.992Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: search_nodes"
        },
        {
          "timestamp": "2025-08-17T14:42:11.992Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"query\":\"schedule\",\"limit\":20}"
        },
        {
          "timestamp": "2025-08-17T14:42:11.992Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: search_nodes"
        },
        {
          "timestamp": "2025-08-17T14:42:11.992Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"query\":\"notion\",\"limit\":20}"
        },
        {
          "timestamp": "2025-08-17T14:42:12.110Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool search_nodes completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:12.151Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool search_nodes completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:19.681Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.httpRequest (Make a simple GET request to retrieve data from an API)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.681Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.slack (Send a message to Slack channel)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.681Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.openAi (Send a message to an AI model and get response)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.682Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.code (Transform data structure using JavaScript)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.682Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.scheduleTrigger (Trigger workflow every Friday to collect PR data and post summaries)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.682Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.notion (Post summarized PR data to Notion database or page)"
        },
        {
          "timestamp": "2025-08-17T14:42:19.743Z",
          "level": "DEBUG",
          "source": "Orchestrator",
          "message": "Session state updated"
        },
        {
          "timestamp": "2025-08-17T14:42:19.743Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Data flow captured: 3 transformations"
        }
      ],
      "nodes": [
        {
          "id": "task_node_1",
          "type": "nodes-base.httpRequest",
          "purpose": "Make a simple GET request to retrieve data from an API"
        },
        {
          "id": "task_node_4",
          "type": "nodes-base.slack",
          "purpose": "Send a message to Slack channel"
        },
        {
          "id": "task_node_3",
          "type": "nodes-base.openAi",
          "purpose": "Send a message to an AI model and get response"
        },
        {
          "id": "task_node_2",
          "type": "nodes-base.code",
          "purpose": "Transform data structure using JavaScript"
        },
        {
          "id": "search_node_1",
          "type": "nodes-base.scheduleTrigger",
          "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
        },
        {
          "id": "search_node_2",
          "type": "nodes-base.notion",
          "purpose": "Post summarized PR data to Notion database or page"
        }
      ],
      "sessionState": {
        "sessionId": "complete_e2e_user_test_1755441721374",
        "createdAt": "2025-08-17T14:42:01.674Z",
        "state": {
          "phase": "configuration",
          "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
          "discovered": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "config": {
                "url": "",
                "method": "GET",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "authentication": "none",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "purpose": "Make a simple GET request to retrieve data from an API",
              "displayName": "get api data",
              "isPreConfigured": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "config": {
                "text": "",
                "channel": "",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "resource": "message",
                "operation": "post",
                "parameters": {},
                "retryOnFail": true,
                "waitBetweenTries": 2000
              },
              "purpose": "Send a message to Slack channel",
              "displayName": "send slack message",
              "isPreConfigured": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "config": {
                "modelId": "gpt-3.5-turbo",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "resource": "chat",
                "operation": "message",
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "purpose": "Send a message to an AI model and get response",
              "displayName": "chat with ai",
              "isPreConfigured": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "config": {
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                "language": "javaScript"
              },
              "purpose": "Transform data structure using JavaScript",
              "displayName": "transform data",
              "isPreConfigured": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page"
            }
          ],
          "selected": [
            "task_node_1",
            "task_node_4",
            "task_node_3",
            "task_node_2",
            "search_node_1",
            "search_node_2"
          ],
          "configured": {},
          "validated": {},
          "workflow": {
            "nodes": [],
            "settings": {},
            "connections": {}
          },
          "seo": {
            "slug": "automate-weekly-github-pr-summaries-721374",
            "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
            "category": "Automation",
            "keywords": [
              "github pull request",
              "workflow automation",
              "slack integration",
              "notion integration",
              "data summarization",
              "weekly reporting",
              "productivity boost",
              "collaboration enhancement",
              "business intelligence"
            ],
            "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
            "generatedAt": "2025-08-17T14:42:19.411Z",
            "integrations": [
              "GitHub",
              "Slack",
              "Notion"
            ],
            "businessValue": "Streamlined Reporting"
          },
          "buildPhases": [],
          "operationHistory": [
            {
              "type": "completePhase",
              "phase": "discovery",
              "timestamp": "2025-08-17T14:42:17.393Z"
            },
            {
              "node": {
                "id": "task_node_1",
                "type": "nodes-base.httpRequest",
                "config": {
                  "url": "",
                  "method": "GET",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "retryOnFail": true,
                  "authentication": "none",
                  "alwaysOutputData": true,
                  "waitBetweenTries": 1000
                },
                "purpose": "Make a simple GET request to retrieve data from an API",
                "displayName": "get api data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_4",
                "type": "nodes-base.slack",
                "config": {
                  "text": "",
                  "channel": "",
                  "onError": "continueRegularOutput",
                  "maxTries": 2,
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "retryOnFail": true,
                  "waitBetweenTries": 2000
                },
                "purpose": "Send a message to Slack channel",
                "displayName": "send slack message",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_4",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_3",
                "type": "nodes-base.openAi",
                "config": {
                  "modelId": "gpt-3.5-turbo",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": ""
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message",
                  "retryOnFail": true,
                  "alwaysOutputData": true,
                  "waitBetweenTries": 5000
                },
                "purpose": "Send a message to an AI model and get response",
                "displayName": "chat with ai",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_3",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_2",
                "type": "nodes-base.code",
                "config": {
                  "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                  "language": "javaScript"
                },
                "purpose": "Transform data structure using JavaScript",
                "displayName": "transform data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_2",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_1",
                "type": "nodes-base.scheduleTrigger",
                "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_2",
                "type": "nodes-base.notion",
                "purpose": "Post summarized PR data to Notion database or page"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_2",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "type": "setSEOMetadata",
              "timestamp": "2025-08-17T14:42:19.527Z"
            }
          ],
          "pendingClarifications": [],
          "clarificationHistory": []
        }
      },
      "stateChanges": {},
      "dataFlow": {
        "input": {
          "prompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday."
        },
        "output": {
          "nodes": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "displayName": "get api data",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "isPreConfigured": true,
              "config": {
                "method": "GET",
                "url": "",
                "authentication": "none",
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 3,
                "waitBetweenTries": 1000,
                "alwaysOutputData": true
              }
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "displayName": "send slack message",
              "purpose": "Send a message to Slack channel",
              "isPreConfigured": true,
              "config": {
                "resource": "message",
                "operation": "post",
                "channel": "",
                "text": "",
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 2,
                "waitBetweenTries": 2000,
                "parameters": {}
              }
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "displayName": "chat with ai",
              "purpose": "Send a message to an AI model and get response",
              "isPreConfigured": true,
              "config": {
                "resource": "chat",
                "operation": "message",
                "modelId": "gpt-3.5-turbo",
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 3,
                "waitBetweenTries": 5000,
                "alwaysOutputData": true
              }
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "displayName": "transform data",
              "purpose": "Transform data structure using JavaScript",
              "isPreConfigured": true,
              "config": {
                "language": "javaScript",
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;"
              }
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "displayName": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "needsConfiguration": true
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "displayName": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page",
              "needsConfiguration": true
            }
          ]
        },
        "transformations": [
          "Intent Analysis",
          "Node Discovery",
          "Selection"
        ]
      }
    },
    "configuration": {
      "name": "Configuration",
      "success": true,
      "metrics": {
        "startTime": 1755441739744,
        "endTime": 1755441755874,
        "duration": 16130,
        "memoryUsage": {
          "heapUsed": 4642824,
          "heapTotal": 37421056,
          "external": 7541444
        }
      },
      "logs": [
        {
          "timestamp": "2025-08-17T14:42:19.744Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Starting configuration phase"
        },
        {
          "timestamp": "2025-08-17T14:42:19.744Z",
          "level": "DEBUG",
          "source": "Claude",
          "message": "Sending request for configuration phase"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.httpRequest\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.slack\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.openAi\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.code\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.scheduleTrigger\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: get_node_essentials"
        },
        {
          "timestamp": "2025-08-17T14:42:19.800Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.notion\"}"
        },
        {
          "timestamp": "2025-08-17T14:42:19.957Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:19.970Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:19.973Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:19.976Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:20.046Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:20.048Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool get_node_essentials completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:25.979Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:25.979Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.scheduleTrigger\",\"config\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 9 * * 5\"}]},\"notice\":\"\"}}"
        },
        {
          "timestamp": "2025-08-17T14:42:26.126Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:27.923Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:27.923Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.slack\",\"config\":{\"text\":\"📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\\n\\n{{ $json.summary }}\\n\\n_Generated automatically from merged PRs this week_ 🚀\",\"resource\":\"message\",\"operation\":\"post\",\"parameters\":{},\"channelId\":\"{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}\",\"select\":\"channel\"}}"
        },
        {
          "timestamp": "2025-08-17T14:42:28.037Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:28.052Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:28.052Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.openAi\",\"config\":{\"modelId\":\"gpt-3.5-turbo\",\"messages\":{\"values\":[{\"role\":\"user\",\"content\":\"Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\\n\\n{{ $json.prTitles }}\"}]},\"resource\":\"chat\",\"operation\":\"message\"}}"
        },
        {
          "timestamp": "2025-08-17T14:42:28.262Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:29.433Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:29.433Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.httpRequest\",\"config\":{\"url\":\"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100\",\"method\":\"GET\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"githubApi\",\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"application/vnd.github.v3+json\"},{\"name\":\"User-Agent\",\"value\":\"n8n-workflow\"}]},\"sendQuery\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"since\",\"value\":\"{{ $now.minus({days: 7}).toISO() }}\"}]}}}"
        },
        {
          "timestamp": "2025-08-17T14:42:29.538Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:33.586Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:33.586Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.notion\",\"config\":{\"resource\":\"databasePage\",\"operation\":\"create\",\"databaseId\":{\"mode\":\"url\",\"value\":\"={{ $vars.notionDatabaseUrl }}\"},\"title\":\"Weekly PR Summary - {{ new Date().toLocaleDateString() }}\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Summary\",\"textContent\":\"={{ $json.summary }}\"},{\"key\":\"Date\",\"dateValue\":\"={{ new Date().toISOString().split('T')[0] }}\"},{\"key\":\"PR Count\",\"numberValue\":\"={{ $json.prCount }}\"}]}}}"
        },
        {
          "timestamp": "2025-08-17T14:42:33.722Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:34.285Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_node_minimal"
        },
        {
          "timestamp": "2025-08-17T14:42:34.285Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"nodeType\":\"nodes-base.code\",\"config\":{\"jsCode\":\"// Transform GitHub PR data into structured summaries\\nconst results = [];\\n\\n// Group PRs by repository or category if needed\\nconst prSummary = {\\n  totalPRs: items.length,\\n  repositories: {},\\n  summaryText: '',\\n  weekRange: ''\\n};\\n\\n// Calculate week range\\nconst now = new Date();\\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\\nconst weekEnd = new Date();\\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\\n\\n// Process each PR\\nfor (const item of items) {\\n  const pr = item.json;\\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\\n  \\n  if (!prSummary.repositories[repoName]) {\\n    prSummary.repositories[repoName] = {\\n      count: 0,\\n      titles: []\\n    };\\n  }\\n  \\n  prSummary.repositories[repoName].count++;\\n  prSummary.repositories[repoName].titles.push({\\n    title: pr.title,\\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\\n    mergedAt: pr.merged_at,\\n    url: pr.html_url\\n  });\\n}\\n\\n// Create summary text for Slack\\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\\n\\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\\n  data.titles.forEach(pr => {\\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\\n  });\\n  summaryLines.push('');\\n}\\n\\nprSummary.summaryText = summaryLines.join('\\\\n');\\n\\n// Create structured data for Notion\\nconst notionData = {\\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\\n  totalCount: prSummary.totalPRs,\\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\\n    name,\\n    count: data.count,\\n    prs: data.titles\\n  })),\\n  generatedAt: new Date().toISOString()\\n};\\n\\nresults.push({\\n  json: {\\n    // For Slack posting\\n    slackMessage: prSummary.summaryText,\\n    // For Notion posting\\n    notionData: notionData,\\n    // Raw summary data\\n    summary: prSummary,\\n    processedAt: new Date().toISOString()\\n  }\\n});\\n\\nreturn results;\",\"language\":\"javaScript\"}}"
        },
        {
          "timestamp": "2025-08-17T14:42:34.404Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_node_minimal completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.httpRequest (Make a simple GET request to retrieve data from an API)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.slack (Send a message to Slack channel)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.openAi (Send a message to an AI model and get response)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.code (Transform data structure using JavaScript)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.scheduleTrigger (Trigger workflow every Friday to collect PR data and post summaries)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.810Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: nodes-base.notion (Post summarized PR data to Notion database or page)"
        },
        {
          "timestamp": "2025-08-17T14:42:35.873Z",
          "level": "DEBUG",
          "source": "Orchestrator",
          "message": "Session state updated"
        },
        {
          "timestamp": "2025-08-17T14:42:35.874Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Data flow captured: 3 transformations"
        }
      ],
      "nodes": [
        {
          "id": "task_node_1",
          "type": "nodes-base.httpRequest",
          "purpose": "Make a simple GET request to retrieve data from an API",
          "configuration": {
            "onError": "continueRegularOutput",
            "maxTries": 3,
            "retryOnFail": true,
            "alwaysOutputData": true,
            "waitBetweenTries": 1000,
            "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
            "typeVersion": "1",
            "parameters": {
              "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
              "method": "GET",
              "authentication": "predefinedCredentialType",
              "nodeCredentialType": "githubApi",
              "sendHeaders": true,
              "headerParameters": {
                "parameters": [
                  {
                    "name": "Accept",
                    "value": "application/vnd.github.v3+json"
                  },
                  {
                    "name": "User-Agent",
                    "value": "n8n-workflow"
                  }
                ]
              },
              "sendQuery": true,
              "queryParameters": {
                "parameters": [
                  {
                    "name": "since",
                    "value": "{{ $now.minus({days: 7}).toISO() }}"
                  }
                ]
              }
            }
          },
          "validationStatus": "valid"
        },
        {
          "id": "task_node_4",
          "type": "nodes-base.slack",
          "purpose": "Send a message to Slack channel",
          "configuration": {
            "onError": "continueRegularOutput",
            "maxTries": 2,
            "retryOnFail": true,
            "waitBetweenTries": 2000,
            "notes": "Send weekly summary of merged PR titles to Slack channel",
            "typeVersion": "1",
            "parameters": {
              "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
              "resource": "message",
              "operation": "post",
              "parameters": {},
              "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
              "select": "channel"
            }
          },
          "validationStatus": "valid"
        },
        {
          "id": "task_node_3",
          "type": "nodes-base.openAi",
          "purpose": "Send a message to an AI model and get response",
          "configuration": {
            "onError": "continueRegularOutput",
            "maxTries": 3,
            "retryOnFail": true,
            "alwaysOutputData": true,
            "waitBetweenTries": 5000,
            "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
            "typeVersion": "1",
            "parameters": {
              "modelId": "gpt-3.5-turbo",
              "messages": {
                "values": [
                  {
                    "role": "user",
                    "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                  }
                ]
              },
              "resource": "chat",
              "operation": "message"
            }
          },
          "validationStatus": "valid"
        },
        {
          "id": "task_node_2",
          "type": "nodes-base.code",
          "purpose": "Transform data structure using JavaScript",
          "configuration": {
            "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
            "parameters": {
              "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
              "language": "javaScript"
            }
          },
          "validationStatus": "valid"
        },
        {
          "id": "search_node_1",
          "type": "nodes-base.scheduleTrigger",
          "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
          "configuration": {
            "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
            "typeVersion": "1.2",
            "parameters": {
              "rule": {
                "interval": [
                  {
                    "field": "cronExpression",
                    "expression": "0 9 * * 5"
                  }
                ]
              },
              "notice": ""
            }
          },
          "validationStatus": "valid"
        },
        {
          "id": "search_node_2",
          "type": "nodes-base.notion",
          "purpose": "Post summarized PR data to Notion database or page",
          "configuration": {
            "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
            "typeVersion": "2.2",
            "parameters": {
              "resource": "databasePage",
              "operation": "create",
              "databaseId": {
                "mode": "url",
                "value": "={{ $vars.notionDatabaseUrl }}"
              },
              "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
              "propertiesUi": {
                "propertyValues": [
                  {
                    "key": "Summary",
                    "textContent": "={{ $json.summary }}"
                  },
                  {
                    "key": "Date",
                    "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                  },
                  {
                    "key": "PR Count",
                    "numberValue": "={{ $json.prCount }}"
                  }
                ]
              }
            }
          },
          "validationStatus": "valid"
        }
      ],
      "sessionState": {
        "sessionId": "complete_e2e_user_test_1755441721374",
        "createdAt": "2025-08-17T14:42:01.674Z",
        "state": {
          "phase": "building",
          "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
          "discovered": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "config": {
                "url": "",
                "method": "GET",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "authentication": "none",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "purpose": "Make a simple GET request to retrieve data from an API",
              "displayName": "get api data",
              "isPreConfigured": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "config": {
                "text": "",
                "channel": "",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "resource": "message",
                "operation": "post",
                "parameters": {},
                "retryOnFail": true,
                "waitBetweenTries": 2000
              },
              "purpose": "Send a message to Slack channel",
              "displayName": "send slack message",
              "isPreConfigured": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "config": {
                "modelId": "gpt-3.5-turbo",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "resource": "chat",
                "operation": "message",
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "purpose": "Send a message to an AI model and get response",
              "displayName": "chat with ai",
              "isPreConfigured": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "config": {
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                "language": "javaScript"
              },
              "purpose": "Transform data structure using JavaScript",
              "displayName": "transform data",
              "isPreConfigured": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page"
            }
          ],
          "selected": [
            "task_node_1",
            "task_node_4",
            "task_node_3",
            "task_node_2",
            "search_node_1",
            "search_node_2"
          ],
          "configured": {},
          "validated": {},
          "workflow": {
            "nodes": [],
            "settings": {},
            "connections": {}
          },
          "seo": {
            "slug": "automate-weekly-github-pr-summaries-721374",
            "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
            "category": "Automation",
            "keywords": [
              "github pull request",
              "workflow automation",
              "slack integration",
              "notion integration",
              "data summarization",
              "weekly reporting",
              "productivity boost",
              "collaboration enhancement",
              "business intelligence"
            ],
            "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
            "generatedAt": "2025-08-17T14:42:19.411Z",
            "integrations": [
              "GitHub",
              "Slack",
              "Notion"
            ],
            "businessValue": "Streamlined Reporting"
          },
          "buildPhases": [],
          "operationHistory": [
            {
              "type": "completePhase",
              "phase": "discovery",
              "timestamp": "2025-08-17T14:42:17.393Z"
            },
            {
              "node": {
                "id": "task_node_1",
                "type": "nodes-base.httpRequest",
                "config": {
                  "url": "",
                  "method": "GET",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "retryOnFail": true,
                  "authentication": "none",
                  "alwaysOutputData": true,
                  "waitBetweenTries": 1000
                },
                "purpose": "Make a simple GET request to retrieve data from an API",
                "displayName": "get api data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_4",
                "type": "nodes-base.slack",
                "config": {
                  "text": "",
                  "channel": "",
                  "onError": "continueRegularOutput",
                  "maxTries": 2,
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "retryOnFail": true,
                  "waitBetweenTries": 2000
                },
                "purpose": "Send a message to Slack channel",
                "displayName": "send slack message",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_4",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_3",
                "type": "nodes-base.openAi",
                "config": {
                  "modelId": "gpt-3.5-turbo",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": ""
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message",
                  "retryOnFail": true,
                  "alwaysOutputData": true,
                  "waitBetweenTries": 5000
                },
                "purpose": "Send a message to an AI model and get response",
                "displayName": "chat with ai",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_3",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_2",
                "type": "nodes-base.code",
                "config": {
                  "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                  "language": "javaScript"
                },
                "purpose": "Transform data structure using JavaScript",
                "displayName": "transform data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_2",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_1",
                "type": "nodes-base.scheduleTrigger",
                "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_2",
                "type": "nodes-base.notion",
                "purpose": "Post summarized PR data to Notion database or page"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_2",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "type": "setSEOMetadata",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "setPhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:34.406Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "sendQuery": true,
                  "sendHeaders": true,
                  "authentication": "predefinedCredentialType",
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  },
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "nodeCredentialType": "githubApi"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "nodeId": "task_node_1",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "nodeType": "nodes-base.httpRequest",
              "timestamp": "2025-08-17T14:42:34.593Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "operation": "post",
                  "parameters": {}
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "waitBetweenTries": 2000
              },
              "nodeId": "task_node_4",
              "purpose": "Send a message to Slack channel",
              "nodeType": "nodes-base.slack",
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_4",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "nodeId": "task_node_3",
              "purpose": "Send a message to an AI model and get response",
              "nodeType": "nodes-base.openAi",
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_3",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "nodeId": "task_node_2",
              "purpose": "Transform data structure using JavaScript",
              "nodeType": "nodes-base.code",
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.114Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
              "timestamp": "2025-08-17T14:42:35.114Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "timestamp": "2025-08-17T14:42:35.235Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.397Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
              "timestamp": "2025-08-17T14:42:35.397Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "timestamp": "2025-08-17T14:42:35.527Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "completePhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:35.651Z"
            }
          ],
          "pendingClarifications": [],
          "clarificationHistory": []
        }
      },
      "stateChanges": {},
      "dataFlow": {
        "input": {
          "discoveredNodes": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "displayName": "get api data",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "isPreConfigured": true,
              "config": {
                "method": "GET",
                "url": "",
                "authentication": "none",
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 3,
                "waitBetweenTries": 1000,
                "alwaysOutputData": true
              }
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "displayName": "send slack message",
              "purpose": "Send a message to Slack channel",
              "isPreConfigured": true,
              "config": {
                "resource": "message",
                "operation": "post",
                "channel": "",
                "text": "",
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 2,
                "waitBetweenTries": 2000,
                "parameters": {}
              }
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "displayName": "chat with ai",
              "purpose": "Send a message to an AI model and get response",
              "isPreConfigured": true,
              "config": {
                "resource": "chat",
                "operation": "message",
                "modelId": "gpt-3.5-turbo",
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "onError": "continueRegularOutput",
                "retryOnFail": true,
                "maxTries": 3,
                "waitBetweenTries": 5000,
                "alwaysOutputData": true
              }
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "displayName": "transform data",
              "purpose": "Transform data structure using JavaScript",
              "isPreConfigured": true,
              "config": {
                "language": "javaScript",
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;"
              }
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "displayName": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "needsConfiguration": true
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "displayName": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page",
              "needsConfiguration": true
            }
          ]
        },
        "output": {
          "configuredNodes": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 1000,
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "typeVersion": "1",
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "sendHeaders": true,
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "sendQuery": true,
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  }
                }
              },
              "validated": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "purpose": "Send a message to Slack channel",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "retryOnFail": true,
                "waitBetweenTries": 2000,
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "typeVersion": "1",
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "select": "channel"
                }
              },
              "validated": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "purpose": "Send a message to an AI model and get response",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000,
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "typeVersion": "1",
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                }
              },
              "validated": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "purpose": "Transform data structure using JavaScript",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "validated": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "typeVersion": "1.2",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                }
              },
              "validated": true
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "typeVersion": "2.2",
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                }
              },
              "validated": true
            }
          ]
        },
        "transformations": [
          "Parameter Configuration",
          "Validation",
          "Type Checking"
        ]
      },
      "stateDelta": {
        "added": {},
        "modified": {
          "state": {
            "old": {
              "phase": "configuration",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "nodes": [],
                "settings": {},
                "connections": {}
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [],
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            },
            "new": {
              "phase": "building",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "nodes": [],
                "settings": {},
                "connections": {}
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [],
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            }
          }
        },
        "removed": [],
        "unchanged": [
          "sessionId",
          "createdAt"
        ]
      }
    },
    "building": {
      "name": "Building",
      "success": true,
      "metrics": {
        "startTime": 1755441755874,
        "endTime": 1755441786095,
        "duration": 30221,
        "memoryUsage": {
          "heapUsed": -2833248,
          "heapTotal": 38354944,
          "external": 6707253
        }
      },
      "logs": [
        {
          "timestamp": "2025-08-17T14:42:35.874Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Starting building phase"
        },
        {
          "timestamp": "2025-08-17T14:42:35.874Z",
          "level": "DEBUG",
          "source": "Claude",
          "message": "Sending request for building phase"
        },
        {
          "timestamp": "2025-08-17T14:43:06.005Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.scheduleTrigger (Friday Trigger)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.005Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.httpRequest (Get GitHub PRs)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.code (Transform PR Data)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.openAi (Summarize PRs)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.slack (Post to Slack)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Added node: n8n-nodes-base.notion (Post to Notion)"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Created 6 nodes"
        },
        {
          "timestamp": "2025-08-17T14:43:06.006Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Created 4 connection groups"
        },
        {
          "timestamp": "2025-08-17T14:43:06.095Z",
          "level": "DEBUG",
          "source": "Orchestrator",
          "message": "Session state updated"
        },
        {
          "timestamp": "2025-08-17T14:43:06.095Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Data flow captured: 3 transformations"
        }
      ],
      "nodes": [
        {
          "id": "scheduleTrigger_1",
          "type": "n8n-nodes-base.scheduleTrigger",
          "purpose": "Friday Trigger"
        },
        {
          "id": "httpRequest_1",
          "type": "n8n-nodes-base.httpRequest",
          "purpose": "Get GitHub PRs"
        },
        {
          "id": "code_1",
          "type": "n8n-nodes-base.code",
          "purpose": "Transform PR Data"
        },
        {
          "id": "openAi_1",
          "type": "n8n-nodes-base.openAi",
          "purpose": "Summarize PRs"
        },
        {
          "id": "slack_1",
          "type": "n8n-nodes-base.slack",
          "purpose": "Post to Slack"
        },
        {
          "id": "notion_1",
          "type": "n8n-nodes-base.notion",
          "purpose": "Post to Notion"
        }
      ],
      "sessionState": {
        "sessionId": "complete_e2e_user_test_1755441721374",
        "createdAt": "2025-08-17T14:42:01.674Z",
        "state": {
          "phase": "validation",
          "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
          "discovered": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "config": {
                "url": "",
                "method": "GET",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "authentication": "none",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "purpose": "Make a simple GET request to retrieve data from an API",
              "displayName": "get api data",
              "isPreConfigured": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "config": {
                "text": "",
                "channel": "",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "resource": "message",
                "operation": "post",
                "parameters": {},
                "retryOnFail": true,
                "waitBetweenTries": 2000
              },
              "purpose": "Send a message to Slack channel",
              "displayName": "send slack message",
              "isPreConfigured": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "config": {
                "modelId": "gpt-3.5-turbo",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "resource": "chat",
                "operation": "message",
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "purpose": "Send a message to an AI model and get response",
              "displayName": "chat with ai",
              "isPreConfigured": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "config": {
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                "language": "javaScript"
              },
              "purpose": "Transform data structure using JavaScript",
              "displayName": "transform data",
              "isPreConfigured": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page"
            }
          ],
          "selected": [
            "task_node_1",
            "task_node_4",
            "task_node_3",
            "task_node_2",
            "search_node_1",
            "search_node_2"
          ],
          "configured": {},
          "validated": {},
          "workflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "onError": "stopWorkflow",
                "position": [
                  250,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "typeVersion": 1
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  550,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  },
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi"
                },
                "typeVersion": 4.2
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "onError": "continueRegularOutput",
                "position": [
                  850,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "typeVersion": 2
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  1150,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "options": {
                    "maxTokens": 500,
                    "temperature": 0.7
                  },
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                      }
                    ]
                  }
                },
                "typeVersion": 1.3
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "position": [
                  1450,
                  200
                ],
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                  "channel": "#development",
                  "resource": "message",
                  "operation": "post",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "typeVersion": 2.1
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "onError": "continueRegularOutput",
                "position": [
                  1450,
                  400
                ],
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "typeVersion": 2.1
              }
            ],
            "settings": {
              "executionOrder": "v1",
              "saveManualExecutions": true,
              "saveDataErrorExecution": "all",
              "saveDataSuccessExecution": "all"
            },
            "connections": {
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            }
          },
          "seo": {
            "slug": "automate-weekly-github-pr-summaries-721374",
            "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
            "category": "Automation",
            "keywords": [
              "github pull request",
              "workflow automation",
              "slack integration",
              "notion integration",
              "data summarization",
              "weekly reporting",
              "productivity boost",
              "collaboration enhancement",
              "business intelligence"
            ],
            "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
            "generatedAt": "2025-08-17T14:42:19.411Z",
            "integrations": [
              "GitHub",
              "Slack",
              "Notion"
            ],
            "businessValue": "Streamlined Reporting"
          },
          "buildPhases": [
            {
              "type": "trigger",
              "nodeIds": [
                "scheduleTrigger_1"
              ],
              "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
            },
            {
              "type": "data_collection",
              "nodeIds": [
                "httpRequest_1"
              ],
              "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "code_1"
              ],
              "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "openAi_1"
              ],
              "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
            },
            {
              "type": "notification",
              "nodeIds": [
                "slack_1",
                "notion_1"
              ],
              "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
            }
          ],
          "configAnalysis": {
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "rule",
                    "value": {
                      "interval": [
                        {
                          "field": "cronExpression",
                          "expression": "0 9 * * 5"
                        }
                      ]
                    },
                    "description": "rule"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "status": "partial",
                "isReady": false,
                "purpose": "Make HTTP API request",
                "configured": [
                  {
                    "field": "authentication",
                    "value": "predefinedCredentialType",
                    "description": "authentication"
                  },
                  {
                    "field": "nodeCredentialType",
                    "value": "githubApi",
                    "description": "nodeCredentialType"
                  },
                  {
                    "field": "options",
                    "value": {
                      "response": {
                        "response": {
                          "responseFormat": "json"
                        }
                      }
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "url",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                  },
                  {
                    "field": "method",
                    "options": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS"
                    ],
                    "decision": "Provide required value",
                    "description": "Required field \"method\" is missing"
                  }
                ],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "PREDEFINEDCREDENTIALTYPE",
                    "description": "Option: predefinedCredentialType",
                    "isAlternative": true,
                    "credentialType": "predefinedCredentialType"
                  },
                  {
                    "field": "credentials",
                    "variable": "GENERICCREDENTIALTYPE",
                    "description": "Option: genericCredentialType",
                    "isAlternative": true,
                    "credentialType": "genericCredentialType"
                  }
                ]
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "status": "configured",
                "isReady": true,
                "purpose": "Execute custom JavaScript code",
                "configured": [
                  {
                    "field": "jsCode",
                    "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                    "description": "jsCode"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "modelId",
                    "value": "gpt-3.5-turbo",
                    "description": "modelId"
                  },
                  {
                    "field": "messages",
                    "value": {
                      "values": [
                        {
                          "role": "system",
                          "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                        },
                        {
                          "role": "user",
                          "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                        }
                      ]
                    },
                    "description": "messages"
                  },
                  {
                    "field": "options",
                    "value": {
                      "maxTokens": 500,
                      "temperature": 0.7
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "status": "needs_credentials",
                "isReady": false,
                "purpose": "Send messages to Slack",
                "configured": [
                  {
                    "field": "resource",
                    "value": "message",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "post",
                    "description": "operation"
                  },
                  {
                    "field": "channel",
                    "value": "#development",
                    "description": "channel"
                  },
                  {
                    "field": "text",
                    "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                    "description": "text"
                  },
                  {
                    "field": "otherOptions",
                    "value": {
                      "mrkdwn": true
                    },
                    "description": "otherOptions"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "ACCESSTOKEN",
                    "description": "Option: accessToken",
                    "isAlternative": true,
                    "credentialType": "accessToken"
                  },
                  {
                    "field": "credentials",
                    "variable": "OAUTH2",
                    "description": "Option: oAuth2",
                    "isAlternative": true,
                    "credentialType": "oAuth2"
                  }
                ]
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "status": "needs_decisions",
                "isReady": false,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "resource",
                    "value": "databasePage",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "create",
                    "description": "operation"
                  },
                  {
                    "field": "title",
                    "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                    "description": "title"
                  },
                  {
                    "field": "propertiesUi",
                    "value": {
                      "propertyValues": [
                        {
                          "key": "Summary",
                          "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                        },
                        {
                          "key": "PR Count",
                          "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                        },
                        {
                          "key": "Week Start",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                        },
                        {
                          "key": "Week End",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                        }
                      ]
                    },
                    "description": "propertiesUi"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "databaseId",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"your-database-id\" appears to be a placeholder"
                  }
                ],
                "needsCredentials": []
              }
            ],
            "timestamp": "2025-08-17T14:43:05.553Z",
            "isComplete": false,
            "totalNodes": 6,
            "configuredNodes": 3,
            "missingCredentials": [
              "PREDEFINEDCREDENTIALTYPE",
              "GENERICCREDENTIALTYPE",
              "ACCESSTOKEN",
              "OAUTH2"
            ]
          },
          "operationHistory": [
            {
              "type": "completePhase",
              "phase": "discovery",
              "timestamp": "2025-08-17T14:42:17.393Z"
            },
            {
              "node": {
                "id": "task_node_1",
                "type": "nodes-base.httpRequest",
                "config": {
                  "url": "",
                  "method": "GET",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "retryOnFail": true,
                  "authentication": "none",
                  "alwaysOutputData": true,
                  "waitBetweenTries": 1000
                },
                "purpose": "Make a simple GET request to retrieve data from an API",
                "displayName": "get api data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_4",
                "type": "nodes-base.slack",
                "config": {
                  "text": "",
                  "channel": "",
                  "onError": "continueRegularOutput",
                  "maxTries": 2,
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "retryOnFail": true,
                  "waitBetweenTries": 2000
                },
                "purpose": "Send a message to Slack channel",
                "displayName": "send slack message",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_4",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_3",
                "type": "nodes-base.openAi",
                "config": {
                  "modelId": "gpt-3.5-turbo",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": ""
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message",
                  "retryOnFail": true,
                  "alwaysOutputData": true,
                  "waitBetweenTries": 5000
                },
                "purpose": "Send a message to an AI model and get response",
                "displayName": "chat with ai",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_3",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_2",
                "type": "nodes-base.code",
                "config": {
                  "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                  "language": "javaScript"
                },
                "purpose": "Transform data structure using JavaScript",
                "displayName": "transform data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_2",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_1",
                "type": "nodes-base.scheduleTrigger",
                "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_2",
                "type": "nodes-base.notion",
                "purpose": "Post summarized PR data to Notion database or page"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_2",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "type": "setSEOMetadata",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "setPhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:34.406Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "sendQuery": true,
                  "sendHeaders": true,
                  "authentication": "predefinedCredentialType",
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  },
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "nodeCredentialType": "githubApi"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "nodeId": "task_node_1",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "nodeType": "nodes-base.httpRequest",
              "timestamp": "2025-08-17T14:42:34.593Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "operation": "post",
                  "parameters": {}
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "waitBetweenTries": 2000
              },
              "nodeId": "task_node_4",
              "purpose": "Send a message to Slack channel",
              "nodeType": "nodes-base.slack",
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_4",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "nodeId": "task_node_3",
              "purpose": "Send a message to an AI model and get response",
              "nodeType": "nodes-base.openAi",
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_3",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "nodeId": "task_node_2",
              "purpose": "Transform data structure using JavaScript",
              "nodeType": "nodes-base.code",
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.114Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
              "timestamp": "2025-08-17T14:42:35.114Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "timestamp": "2025-08-17T14:42:35.235Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.397Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
              "timestamp": "2025-08-17T14:42:35.397Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "timestamp": "2025-08-17T14:42:35.527Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "completePhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "setPhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.554Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.3
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "channel": "#development",
                      "resource": "message",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.1
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.1
                  }
                ],
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:05.734Z"
            },
            {
              "type": "setBuildPhases",
              "phases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "setConfigAnalysis",
              "analysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "completePhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.735Z"
            }
          ],
          "pendingClarifications": [],
          "clarificationHistory": []
        }
      },
      "stateChanges": {},
      "dataFlow": {
        "input": {
          "configuredNodes": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 1000,
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "typeVersion": "1",
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "sendHeaders": true,
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "sendQuery": true,
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  }
                }
              },
              "validated": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "purpose": "Send a message to Slack channel",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "retryOnFail": true,
                "waitBetweenTries": 2000,
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "typeVersion": "1",
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "select": "channel"
                }
              },
              "validated": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "purpose": "Send a message to an AI model and get response",
              "config": {
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000,
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "typeVersion": "1",
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                }
              },
              "validated": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "purpose": "Transform data structure using JavaScript",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "validated": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "typeVersion": "1.2",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                }
              },
              "validated": true
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "typeVersion": "2.2",
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                }
              },
              "validated": true
            }
          ]
        },
        "output": {
          "workflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                  250,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "name": "Friday Trigger",
                "typeVersion": 1,
                "onError": "stopWorkflow"
              },
              {
                "id": "httpRequest_1",
                "type": "n8n-nodes-base.httpRequest",
                "position": [
                  550,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  }
                },
                "name": "Get GitHub PRs",
                "typeVersion": 4.2,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "code_1",
                "type": "n8n-nodes-base.code",
                "position": [
                  850,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "name": "Transform PR Data",
                "typeVersion": 2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "openAi_1",
                "type": "n8n-nodes-base.openAi",
                "position": [
                  1150,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                      }
                    ]
                  },
                  "options": {
                    "temperature": 0.7,
                    "maxTokens": 500
                  }
                },
                "name": "Summarize PRs",
                "typeVersion": 1.3,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "slack_1",
                "type": "n8n-nodes-base.slack",
                "position": [
                  1450,
                  200
                ],
                "parameters": {
                  "resource": "message",
                  "operation": "post",
                  "channel": "#development",
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "name": "Post to Slack",
                "typeVersion": 2.1,
                "onError": "continueRegularOutput",
                "maxTries": 2
              },
              {
                "id": "notion_1",
                "type": "n8n-nodes-base.notion",
                "position": [
                  1450,
                  400
                ],
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "name": "Post to Notion",
                "typeVersion": 2.1,
                "onError": "continueRegularOutput"
              }
            ],
            "connections": {
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "saveDataSuccessExecution": "all",
              "saveDataErrorExecution": "all",
              "saveManualExecutions": true
            }
          }
        },
        "transformations": [
          "Workflow Generation",
          "Connection Building",
          "Settings Configuration"
        ]
      },
      "stateDelta": {
        "added": {
          "state": {
            "workflow": {
              "name": "Weekly GitHub PR Summary to Slack and Notion",
              "settings": {
                "executionOrder": "v1",
                "saveManualExecutions": true,
                "saveDataErrorExecution": "all",
                "saveDataSuccessExecution": "all"
              },
              "connections": {
                "Summarize PRs": {
                  "main": [
                    [
                      {
                        "node": "Post to Slack",
                        "type": "main",
                        "index": 0
                      },
                      {
                        "node": "Post to Notion",
                        "type": "main",
                        "index": 0
                      }
                    ]
                  ]
                },
                "Friday Trigger": {
                  "main": [
                    [
                      {
                        "node": "Get GitHub PRs",
                        "type": "main",
                        "index": 0
                      }
                    ]
                  ]
                },
                "Get GitHub PRs": {
                  "main": [
                    [
                      {
                        "node": "Transform PR Data",
                        "type": "main",
                        "index": 0
                      }
                    ]
                  ]
                },
                "Transform PR Data": {
                  "main": [
                    [
                      {
                        "node": "Summarize PRs",
                        "type": "main",
                        "index": 0
                      }
                    ]
                  ]
                }
              }
            },
            "configAnalysis": {
              "nodes": [
                {
                  "id": "scheduleTrigger_1",
                  "name": "Friday Trigger",
                  "type": "n8n-nodes-base.scheduleTrigger",
                  "status": "configured",
                  "isReady": true,
                  "purpose": "Process data",
                  "configured": [
                    {
                      "field": "rule",
                      "value": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "description": "rule"
                    }
                  ],
                  "needsDecisions": [],
                  "needsCredentials": []
                },
                {
                  "id": "httpRequest_1",
                  "name": "Get GitHub PRs",
                  "type": "n8n-nodes-base.httpRequest",
                  "status": "partial",
                  "isReady": false,
                  "purpose": "Make HTTP API request",
                  "configured": [
                    {
                      "field": "authentication",
                      "value": "predefinedCredentialType",
                      "description": "authentication"
                    },
                    {
                      "field": "nodeCredentialType",
                      "value": "githubApi",
                      "description": "nodeCredentialType"
                    },
                    {
                      "field": "options",
                      "value": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "description": "options"
                    }
                  ],
                  "needsDecisions": [
                    {
                      "field": "url",
                      "decision": "Replace placeholder value",
                      "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                    },
                    {
                      "field": "method",
                      "options": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH",
                        "HEAD",
                        "OPTIONS"
                      ],
                      "decision": "Provide required value",
                      "description": "Required field \"method\" is missing"
                    }
                  ],
                  "needsCredentials": [
                    {
                      "field": "credentials",
                      "variable": "PREDEFINEDCREDENTIALTYPE",
                      "description": "Option: predefinedCredentialType",
                      "isAlternative": true,
                      "credentialType": "predefinedCredentialType"
                    },
                    {
                      "field": "credentials",
                      "variable": "GENERICCREDENTIALTYPE",
                      "description": "Option: genericCredentialType",
                      "isAlternative": true,
                      "credentialType": "genericCredentialType"
                    }
                  ]
                },
                {
                  "id": "code_1",
                  "name": "Transform PR Data",
                  "type": "n8n-nodes-base.code",
                  "status": "configured",
                  "isReady": true,
                  "purpose": "Execute custom JavaScript code",
                  "configured": [
                    {
                      "field": "jsCode",
                      "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                      "description": "jsCode"
                    }
                  ],
                  "needsDecisions": [],
                  "needsCredentials": []
                },
                {
                  "id": "openAi_1",
                  "name": "Summarize PRs",
                  "type": "n8n-nodes-base.openAi",
                  "status": "configured",
                  "isReady": true,
                  "purpose": "Process data",
                  "configured": [
                    {
                      "field": "modelId",
                      "value": "gpt-3.5-turbo",
                      "description": "modelId"
                    },
                    {
                      "field": "messages",
                      "value": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      },
                      "description": "messages"
                    },
                    {
                      "field": "options",
                      "value": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "description": "options"
                    }
                  ],
                  "needsDecisions": [],
                  "needsCredentials": []
                },
                {
                  "id": "slack_1",
                  "name": "Post to Slack",
                  "type": "n8n-nodes-base.slack",
                  "status": "needs_credentials",
                  "isReady": false,
                  "purpose": "Send messages to Slack",
                  "configured": [
                    {
                      "field": "resource",
                      "value": "message",
                      "description": "resource"
                    },
                    {
                      "field": "operation",
                      "value": "post",
                      "description": "operation"
                    },
                    {
                      "field": "channel",
                      "value": "#development",
                      "description": "channel"
                    },
                    {
                      "field": "text",
                      "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "description": "text"
                    },
                    {
                      "field": "otherOptions",
                      "value": {
                        "mrkdwn": true
                      },
                      "description": "otherOptions"
                    }
                  ],
                  "needsDecisions": [],
                  "needsCredentials": [
                    {
                      "field": "credentials",
                      "variable": "ACCESSTOKEN",
                      "description": "Option: accessToken",
                      "isAlternative": true,
                      "credentialType": "accessToken"
                    },
                    {
                      "field": "credentials",
                      "variable": "OAUTH2",
                      "description": "Option: oAuth2",
                      "isAlternative": true,
                      "credentialType": "oAuth2"
                    }
                  ]
                },
                {
                  "id": "notion_1",
                  "name": "Post to Notion",
                  "type": "n8n-nodes-base.notion",
                  "status": "needs_decisions",
                  "isReady": false,
                  "purpose": "Process data",
                  "configured": [
                    {
                      "field": "resource",
                      "value": "databasePage",
                      "description": "resource"
                    },
                    {
                      "field": "operation",
                      "value": "create",
                      "description": "operation"
                    },
                    {
                      "field": "title",
                      "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "description": "title"
                    },
                    {
                      "field": "propertiesUi",
                      "value": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      },
                      "description": "propertiesUi"
                    }
                  ],
                  "needsDecisions": [
                    {
                      "field": "databaseId",
                      "decision": "Replace placeholder value",
                      "description": "Current value \"your-database-id\" appears to be a placeholder"
                    }
                  ],
                  "needsCredentials": []
                }
              ],
              "timestamp": "2025-08-17T14:43:05.553Z",
              "isComplete": false,
              "totalNodes": 6,
              "configuredNodes": 3,
              "missingCredentials": [
                "PREDEFINEDCREDENTIALTYPE",
                "GENERICCREDENTIALTYPE",
                "ACCESSTOKEN",
                "OAUTH2"
              ]
            }
          }
        },
        "modified": {
          "state": {
            "old": {
              "phase": "building",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "nodes": [],
                "settings": {},
                "connections": {}
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [],
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            },
            "new": {
              "phase": "validation",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.3
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "channel": "#development",
                      "resource": "message",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.1
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.1
                  }
                ],
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "configAnalysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "setPhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.554Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.3
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                          "channel": "#development",
                          "resource": "message",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.1
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.1
                      }
                    ],
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:05.734Z"
                },
                {
                  "type": "setBuildPhases",
                  "phases": [
                    {
                      "type": "trigger",
                      "nodeIds": [
                        "scheduleTrigger_1"
                      ],
                      "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    {
                      "type": "data_collection",
                      "nodeIds": [
                        "httpRequest_1"
                      ],
                      "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "code_1"
                      ],
                      "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "openAi_1"
                      ],
                      "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    {
                      "type": "notification",
                      "nodeIds": [
                        "slack_1",
                        "notion_1"
                      ],
                      "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    }
                  ],
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setConfigAnalysis",
                  "analysis": {
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "rule",
                            "value": {
                              "interval": [
                                {
                                  "field": "cronExpression",
                                  "expression": "0 9 * * 5"
                                }
                              ]
                            },
                            "description": "rule"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "status": "partial",
                        "isReady": false,
                        "purpose": "Make HTTP API request",
                        "configured": [
                          {
                            "field": "authentication",
                            "value": "predefinedCredentialType",
                            "description": "authentication"
                          },
                          {
                            "field": "nodeCredentialType",
                            "value": "githubApi",
                            "description": "nodeCredentialType"
                          },
                          {
                            "field": "options",
                            "value": {
                              "response": {
                                "response": {
                                  "responseFormat": "json"
                                }
                              }
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "url",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                          },
                          {
                            "field": "method",
                            "options": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "PATCH",
                              "HEAD",
                              "OPTIONS"
                            ],
                            "decision": "Provide required value",
                            "description": "Required field \"method\" is missing"
                          }
                        ],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "PREDEFINEDCREDENTIALTYPE",
                            "description": "Option: predefinedCredentialType",
                            "isAlternative": true,
                            "credentialType": "predefinedCredentialType"
                          },
                          {
                            "field": "credentials",
                            "variable": "GENERICCREDENTIALTYPE",
                            "description": "Option: genericCredentialType",
                            "isAlternative": true,
                            "credentialType": "genericCredentialType"
                          }
                        ]
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Execute custom JavaScript code",
                        "configured": [
                          {
                            "field": "jsCode",
                            "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                            "description": "jsCode"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "modelId",
                            "value": "gpt-3.5-turbo",
                            "description": "modelId"
                          },
                          {
                            "field": "messages",
                            "value": {
                              "values": [
                                {
                                  "role": "system",
                                  "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                                },
                                {
                                  "role": "user",
                                  "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                                }
                              ]
                            },
                            "description": "messages"
                          },
                          {
                            "field": "options",
                            "value": {
                              "maxTokens": 500,
                              "temperature": 0.7
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "status": "needs_credentials",
                        "isReady": false,
                        "purpose": "Send messages to Slack",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "message",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "post",
                            "description": "operation"
                          },
                          {
                            "field": "channel",
                            "value": "#development",
                            "description": "channel"
                          },
                          {
                            "field": "text",
                            "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                            "description": "text"
                          },
                          {
                            "field": "otherOptions",
                            "value": {
                              "mrkdwn": true
                            },
                            "description": "otherOptions"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "ACCESSTOKEN",
                            "description": "Option: accessToken",
                            "isAlternative": true,
                            "credentialType": "accessToken"
                          },
                          {
                            "field": "credentials",
                            "variable": "OAUTH2",
                            "description": "Option: oAuth2",
                            "isAlternative": true,
                            "credentialType": "oAuth2"
                          }
                        ]
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "status": "needs_decisions",
                        "isReady": false,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "databasePage",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "create",
                            "description": "operation"
                          },
                          {
                            "field": "title",
                            "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                            "description": "title"
                          },
                          {
                            "field": "propertiesUi",
                            "value": {
                              "propertyValues": [
                                {
                                  "key": "Summary",
                                  "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                                },
                                {
                                  "key": "PR Count",
                                  "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                                },
                                {
                                  "key": "Week Start",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                                },
                                {
                                  "key": "Week End",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                                }
                              ]
                            },
                            "description": "propertiesUi"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "databaseId",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"your-database-id\" appears to be a placeholder"
                          }
                        ],
                        "needsCredentials": []
                      }
                    ],
                    "timestamp": "2025-08-17T14:43:05.553Z",
                    "isComplete": false,
                    "totalNodes": 6,
                    "configuredNodes": 3,
                    "missingCredentials": [
                      "PREDEFINEDCREDENTIALTYPE",
                      "GENERICCREDENTIALTYPE",
                      "ACCESSTOKEN",
                      "OAUTH2"
                    ]
                  },
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "completePhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.735Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            }
          }
        },
        "removed": [],
        "unchanged": [
          "sessionId",
          "createdAt"
        ]
      }
    },
    "validation": {
      "name": "Validation",
      "success": true,
      "metrics": {
        "startTime": 1755441786095,
        "endTime": 1755441803364,
        "duration": 17269,
        "memoryUsage": {
          "heapUsed": 1643360,
          "heapTotal": 39632896,
          "external": 7200870
        }
      },
      "logs": [
        {
          "timestamp": "2025-08-17T14:43:06.095Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Starting validation phase"
        },
        {
          "timestamp": "2025-08-17T14:43:06.095Z",
          "level": "DEBUG",
          "source": "Claude",
          "message": "Sending request for validation phase"
        },
        {
          "timestamp": "2025-08-17T14:43:06.097Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_workflow"
        },
        {
          "timestamp": "2025-08-17T14:43:06.097Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"workflow\":{\"name\":\"Weekly GitHub PR Summary to Slack and Notion\",\"nodes\":[{\"id\":\"scheduleTrigger_1\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[250,300],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 9 * * 5\"}]}},\"name\":\"Friday Trigger\",\"typeVersion\":1,\"onError\":\"stopWorkflow\"},{\"id\":\"httpRequest_1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[550,300],\"parameters\":{\"url\":\"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"githubApi\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}}},\"name\":\"Get GitHub PRs\",\"typeVersion\":4.2,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"code_1\",\"type\":\"n8n-nodes-base.code\",\"position\":[850,300],\"parameters\":{\"jsCode\":\"// Transform GitHub PR data into structured summaries\\nconst results = [];\\nconst oneWeekAgo = new Date();\\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\\n\\nfor (const item of $input.all()) {\\n  const prs = item.json;\\n  const mergedPRs = prs.filter(pr => {\\n    if (!pr.merged_at) return false;\\n    const mergedDate = new Date(pr.merged_at);\\n    return mergedDate >= oneWeekAgo;\\n  });\\n  \\n  const prTitles = mergedPRs.map(pr => ({\\n    title: pr.title,\\n    author: pr.user.login,\\n    merged_at: pr.merged_at,\\n    html_url: pr.html_url\\n  }));\\n  \\n  results.push({\\n    json: {\\n      merged_prs: prTitles,\\n      count: prTitles.length,\\n      week_start: oneWeekAgo.toISOString().split('T')[0],\\n      week_end: new Date().toISOString().split('T')[0]\\n    }\\n  });\\n}\\n\\nreturn results;\"},\"name\":\"Transform PR Data\",\"typeVersion\":2,\"onError\":\"continueRegularOutput\"},{\"id\":\"openAi_1\",\"type\":\"n8n-nodes-base.openAi\",\"position\":[1150,300],\"parameters\":{\"modelId\":\"gpt-3.5-turbo\",\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests.\"},{\"role\":\"user\",\"content\":\"Create a weekly summary for these {{ $json.count }} merged PRs:\\n\\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\\\n') }}\\n\\nMake it engaging and highlight key themes or improvements.\"}]},\"options\":{\"temperature\":0.7,\"maxTokens\":500}},\"name\":\"Summarize PRs\",\"typeVersion\":1.3,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"slack_1\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1450,200],\"parameters\":{\"resource\":\"message\",\"operation\":\"post\",\"channel\":\"#development\",\"text\":\"📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\\n\\n{{ $('Summarize PRs').item.json.message.content }}\\n\\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}\",\"otherOptions\":{\"mrkdwn\":true}},\"name\":\"Post to Slack\",\"typeVersion\":2.1,\"onError\":\"continueRegularOutput\",\"maxTries\":2},{\"id\":\"notion_1\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1450,400],\"parameters\":{\"resource\":\"databasePage\",\"operation\":\"create\",\"databaseId\":\"your-database-id\",\"title\":\"Weekly PR Summary - {{ new Date().toLocaleDateString() }}\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Summary\",\"textContent\":\"{{ $('Summarize PRs').item.json.message.content }}\"},{\"key\":\"PR Count\",\"numberValue\":\"{{ $('Transform PR Data').item.json.count }}\"},{\"key\":\"Week Start\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_start }}\"},{\"key\":\"Week End\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_end }}\"}]}},\"name\":\"Post to Notion\",\"typeVersion\":2.1,\"onError\":\"continueRegularOutput\"}],\"connections\":{\"Friday Trigger\":{\"main\":[[{\"node\":\"Get GitHub PRs\",\"type\":\"main\",\"index\":0}]]},\"Get GitHub PRs\":{\"main\":[[{\"node\":\"Transform PR Data\",\"type\":\"main\",\"index\":0}]]},\"Transform PR Data\":{\"main\":[[{\"node\":\"Summarize PRs\",\"type\":\"main\",\"index\":0}]]},\"Summarize PRs\":{\"main\":[[{\"node\":\"Post to Slack\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Notion\",\"type\":\"main\",\"index\":0}]]}},\"settings\":{\"executionOrder\":\"v1\",\"saveDataSuccessExecution\":\"all\",\"saveDataErrorExecution\":\"all\",\"saveManualExecutions\":true}},\"options\":{\"validateNodes\":true,\"validateConnections\":true,\"validateExpressions\":true,\"profile\":\"runtime\"}}"
        },
        {
          "timestamp": "2025-08-17T14:43:06.288Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_workflow completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:43:17.468Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_workflow"
        },
        {
          "timestamp": "2025-08-17T14:43:17.468Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"workflow\":{\"name\":\"Weekly GitHub PR Summary to Slack and Notion\",\"nodes\":[{\"id\":\"scheduleTrigger_1\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[250,300],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 9 * * 5\"}]}},\"name\":\"Friday Trigger\",\"typeVersion\":1.2,\"onError\":\"stopWorkflow\"},{\"id\":\"httpRequest_1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[550,300],\"parameters\":{\"url\":\"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"githubApi\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}}},\"name\":\"Get GitHub PRs\",\"typeVersion\":4.2,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"code_1\",\"type\":\"n8n-nodes-base.code\",\"position\":[850,300],\"parameters\":{\"jsCode\":\"// Transform GitHub PR data into structured summaries\\nconst results = [];\\nconst oneWeekAgo = new Date();\\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\\n\\nfor (const item of $input.all()) {\\n  const prs = item.json;\\n  const mergedPRs = prs.filter(pr => {\\n    if (!pr.merged_at) return false;\\n    const mergedDate = new Date(pr.merged_at);\\n    return mergedDate >= oneWeekAgo;\\n  });\\n  \\n  const prTitles = mergedPRs.map(pr => ({\\n    title: pr.title,\\n    author: pr.user.login,\\n    merged_at: pr.merged_at,\\n    html_url: pr.html_url\\n  }));\\n  \\n  results.push({\\n    json: {\\n      merged_prs: prTitles,\\n      count: prTitles.length,\\n      week_start: oneWeekAgo.toISOString().split('T')[0],\\n      week_end: new Date().toISOString().split('T')[0]\\n    }\\n  });\\n}\\n\\nreturn results;\"},\"name\":\"Transform PR Data\",\"typeVersion\":2,\"onError\":\"continueRegularOutput\"},{\"id\":\"openAi_1\",\"type\":\"n8n-nodes-base.openAi\",\"position\":[1150,300],\"parameters\":{\"modelId\":\"gpt-3.5-turbo\",\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests.\"},{\"role\":\"user\",\"content\":\"{{ `Create a weekly summary for these ${$json.count} merged PRs:\\n\\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\\\n')}\\n\\nMake it engaging and highlight key themes or improvements.` }}\"}]},\"options\":{\"temperature\":0.7,\"maxTokens\":500}},\"name\":\"Summarize PRs\",\"typeVersion\":1.1,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"slack_1\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1450,200],\"parameters\":{\"resource\":\"message\",\"operation\":\"post\",\"select\":\"channel\",\"channelId\":\"#development\",\"text\":\"{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\\n\\n${$('Summarize PRs').item.json.message.content}\\n\\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}\",\"otherOptions\":{\"mrkdwn\":true}},\"name\":\"Post to Slack\",\"typeVersion\":2.3,\"onError\":\"continueRegularOutput\",\"maxTries\":2},{\"id\":\"notion_1\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1450,400],\"parameters\":{\"resource\":\"databasePage\",\"operation\":\"create\",\"databaseId\":\"your-database-id\",\"title\":\"{{ `Weekly PR Summary - ${new Date().toLocaleDateString()}` }}\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Summary\",\"textContent\":\"{{ $('Summarize PRs').item.json.message.content }}\"},{\"key\":\"PR Count\",\"numberValue\":\"{{ $('Transform PR Data').item.json.count }}\"},{\"key\":\"Week Start\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_start }}\"},{\"key\":\"Week End\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_end }}\"}]}},\"name\":\"Post to Notion\",\"typeVersion\":2.2,\"onError\":\"continueRegularOutput\"}],\"connections\":{\"Friday Trigger\":{\"main\":[[{\"node\":\"Get GitHub PRs\",\"type\":\"main\",\"index\":0}]]},\"Get GitHub PRs\":{\"main\":[[{\"node\":\"Transform PR Data\",\"type\":\"main\",\"index\":0}]]},\"Transform PR Data\":{\"main\":[[{\"node\":\"Summarize PRs\",\"type\":\"main\",\"index\":0}]]},\"Summarize PRs\":{\"main\":[[{\"node\":\"Post to Slack\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Notion\",\"type\":\"main\",\"index\":0}]]}},\"settings\":{\"executionOrder\":\"v1\",\"saveDataSuccessExecution\":\"all\",\"saveDataErrorExecution\":\"all\",\"saveManualExecutions\":true}},\"options\":{\"validateNodes\":true,\"validateConnections\":true,\"validateExpressions\":true,\"profile\":\"runtime\"}}"
        },
        {
          "timestamp": "2025-08-17T14:43:17.634Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_workflow completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:43:21.965Z",
          "level": "INFO",
          "source": "MCP",
          "message": "Calling tool: validate_workflow"
        },
        {
          "timestamp": "2025-08-17T14:43:21.965Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Parameters: {\"workflow\":{\"name\":\"Weekly GitHub PR Summary to Slack and Notion\",\"nodes\":[{\"id\":\"scheduleTrigger_1\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[250,300],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 9 * * 5\"}]}},\"name\":\"Friday Trigger\",\"typeVersion\":1.2,\"onError\":\"stopWorkflow\"},{\"id\":\"httpRequest_1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[550,300],\"parameters\":{\"url\":\"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"githubApi\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}}},\"name\":\"Get GitHub PRs\",\"typeVersion\":4.2,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"code_1\",\"type\":\"n8n-nodes-base.code\",\"position\":[850,300],\"parameters\":{\"jsCode\":\"// Transform GitHub PR data into structured summaries\\nconst results = [];\\nconst oneWeekAgo = new Date();\\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\\n\\nfor (const item of $input.all()) {\\n  const prs = item.json;\\n  const mergedPRs = prs.filter(pr => {\\n    if (!pr.merged_at) return false;\\n    const mergedDate = new Date(pr.merged_at);\\n    return mergedDate >= oneWeekAgo;\\n  });\\n  \\n  const prTitles = mergedPRs.map(pr => ({\\n    title: pr.title,\\n    author: pr.user.login,\\n    merged_at: pr.merged_at,\\n    html_url: pr.html_url\\n  }));\\n  \\n  results.push({\\n    json: {\\n      merged_prs: prTitles,\\n      count: prTitles.length,\\n      week_start: oneWeekAgo.toISOString().split('T')[0],\\n      week_end: new Date().toISOString().split('T')[0]\\n    }\\n  });\\n}\\n\\nreturn results;\"},\"name\":\"Transform PR Data\",\"typeVersion\":2,\"onError\":\"continueRegularOutput\"},{\"id\":\"openAi_1\",\"type\":\"n8n-nodes-base.openAi\",\"position\":[1150,300],\"parameters\":{\"modelId\":\"gpt-3.5-turbo\",\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests.\"},{\"role\":\"user\",\"content\":\"{{ `Create a weekly summary for these ${$json.count} merged PRs:\\n\\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\\\n')}\\n\\nMake it engaging and highlight key themes or improvements.` }}\"}]},\"options\":{\"temperature\":0.7,\"maxTokens\":500}},\"name\":\"Summarize PRs\",\"typeVersion\":1.1,\"onError\":\"continueRegularOutput\",\"maxTries\":3},{\"id\":\"slack_1\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1450,200],\"parameters\":{\"resource\":\"message\",\"operation\":\"post\",\"select\":\"channel\",\"channelId\":\"#development\",\"text\":\"{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\\n\\n${$('Summarize PRs').item.json.message.content}\\n\\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}\",\"otherOptions\":{\"mrkdwn\":true}},\"name\":\"Post to Slack\",\"typeVersion\":2.3,\"onError\":\"continueRegularOutput\",\"maxTries\":2},{\"id\":\"notion_1\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1450,400],\"parameters\":{\"resource\":\"databasePage\",\"operation\":\"create\",\"databaseId\":\"your-database-id\",\"title\":\"{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Summary\",\"textContent\":\"{{ $('Summarize PRs').item.json.message.content }}\"},{\"key\":\"PR Count\",\"numberValue\":\"{{ $('Transform PR Data').item.json.count }}\"},{\"key\":\"Week Start\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_start }}\"},{\"key\":\"Week End\",\"dateValue\":\"{{ $('Transform PR Data').item.json.week_end }}\"}]}},\"name\":\"Post to Notion\",\"typeVersion\":2.2,\"onError\":\"continueRegularOutput\"}],\"connections\":{\"Friday Trigger\":{\"main\":[[{\"node\":\"Get GitHub PRs\",\"type\":\"main\",\"index\":0}]]},\"Get GitHub PRs\":{\"main\":[[{\"node\":\"Transform PR Data\",\"type\":\"main\",\"index\":0}]]},\"Transform PR Data\":{\"main\":[[{\"node\":\"Summarize PRs\",\"type\":\"main\",\"index\":0}]]},\"Summarize PRs\":{\"main\":[[{\"node\":\"Post to Slack\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Notion\",\"type\":\"main\",\"index\":0}]]}},\"settings\":{\"executionOrder\":\"v1\",\"saveDataSuccessExecution\":\"all\",\"saveDataErrorExecution\":\"all\",\"saveManualExecutions\":true}},\"options\":{\"validateNodes\":true,\"validateConnections\":true,\"validateExpressions\":true,\"profile\":\"runtime\"}}"
        },
        {
          "timestamp": "2025-08-17T14:43:22.543Z",
          "level": "DEBUG",
          "source": "MCP",
          "message": "Tool validate_workflow completed successfully"
        },
        {
          "timestamp": "2025-08-17T14:43:23.261Z",
          "level": "INFO",
          "source": "Validation",
          "message": "Applied fix 1: Replaced 4 nodes (attempt 1)"
        },
        {
          "timestamp": "2025-08-17T14:43:23.261Z",
          "level": "INFO",
          "source": "Validation",
          "message": "Applied fix 2: Replaced 1 nodes (attempt 2)"
        },
        {
          "timestamp": "2025-08-17T14:43:23.261Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Validation completed in 3 attempts"
        },
        {
          "timestamp": "2025-08-17T14:43:23.261Z",
          "level": "INFO",
          "source": "Tools",
          "message": "Applied 2 fixes"
        },
        {
          "timestamp": "2025-08-17T14:43:23.363Z",
          "level": "DEBUG",
          "source": "Orchestrator",
          "message": "Session state updated"
        },
        {
          "timestamp": "2025-08-17T14:43:23.364Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Data flow captured: 3 transformations"
        }
      ],
      "nodes": [],
      "sessionState": {
        "sessionId": "complete_e2e_user_test_1755441721374",
        "createdAt": "2025-08-17T14:42:01.674Z",
        "state": {
          "phase": "documentation",
          "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
          "discovered": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "config": {
                "url": "",
                "method": "GET",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "authentication": "none",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "purpose": "Make a simple GET request to retrieve data from an API",
              "displayName": "get api data",
              "isPreConfigured": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "config": {
                "text": "",
                "channel": "",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "resource": "message",
                "operation": "post",
                "parameters": {},
                "retryOnFail": true,
                "waitBetweenTries": 2000
              },
              "purpose": "Send a message to Slack channel",
              "displayName": "send slack message",
              "isPreConfigured": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "config": {
                "modelId": "gpt-3.5-turbo",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "resource": "chat",
                "operation": "message",
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "purpose": "Send a message to an AI model and get response",
              "displayName": "chat with ai",
              "isPreConfigured": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "config": {
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                "language": "javaScript"
              },
              "purpose": "Transform data structure using JavaScript",
              "displayName": "transform data",
              "isPreConfigured": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page"
            }
          ],
          "selected": [
            "task_node_1",
            "task_node_4",
            "task_node_3",
            "task_node_2",
            "search_node_1",
            "search_node_2"
          ],
          "configured": {},
          "validated": {},
          "workflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "onError": "stopWorkflow",
                "position": [
                  250,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "typeVersion": 1.2
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  550,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  },
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi"
                },
                "typeVersion": 4.2
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "onError": "continueRegularOutput",
                "position": [
                  850,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "typeVersion": 2
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  1150,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "options": {
                    "maxTokens": 500,
                    "temperature": 0.7
                  },
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                      }
                    ]
                  }
                },
                "typeVersion": 1.1
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "position": [
                  1450,
                  200
                ],
                "parameters": {
                  "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "#development",
                  "operation": "post",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "typeVersion": 2.3
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "onError": "continueRegularOutput",
                "position": [
                  1450,
                  400
                ],
                "parameters": {
                  "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "typeVersion": 2.2
              }
            ],
            "valid": true,
            "settings": {
              "executionOrder": "v1",
              "saveManualExecutions": true,
              "saveDataErrorExecution": "all",
              "saveDataSuccessExecution": "all"
            },
            "connections": {
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            }
          },
          "seo": {
            "slug": "automate-weekly-github-pr-summaries-721374",
            "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
            "category": "Automation",
            "keywords": [
              "github pull request",
              "workflow automation",
              "slack integration",
              "notion integration",
              "data summarization",
              "weekly reporting",
              "productivity boost",
              "collaboration enhancement",
              "business intelligence"
            ],
            "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
            "generatedAt": "2025-08-17T14:42:19.411Z",
            "integrations": [
              "GitHub",
              "Slack",
              "Notion"
            ],
            "businessValue": "Streamlined Reporting"
          },
          "buildPhases": [
            {
              "type": "trigger",
              "nodeIds": [
                "scheduleTrigger_1"
              ],
              "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
            },
            {
              "type": "data_collection",
              "nodeIds": [
                "httpRequest_1"
              ],
              "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "code_1"
              ],
              "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "openAi_1"
              ],
              "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
            },
            {
              "type": "notification",
              "nodeIds": [
                "slack_1",
                "notion_1"
              ],
              "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
            }
          ],
          "configAnalysis": {
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "rule",
                    "value": {
                      "interval": [
                        {
                          "field": "cronExpression",
                          "expression": "0 9 * * 5"
                        }
                      ]
                    },
                    "description": "rule"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "status": "partial",
                "isReady": false,
                "purpose": "Make HTTP API request",
                "configured": [
                  {
                    "field": "authentication",
                    "value": "predefinedCredentialType",
                    "description": "authentication"
                  },
                  {
                    "field": "nodeCredentialType",
                    "value": "githubApi",
                    "description": "nodeCredentialType"
                  },
                  {
                    "field": "options",
                    "value": {
                      "response": {
                        "response": {
                          "responseFormat": "json"
                        }
                      }
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "url",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                  },
                  {
                    "field": "method",
                    "options": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS"
                    ],
                    "decision": "Provide required value",
                    "description": "Required field \"method\" is missing"
                  }
                ],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "PREDEFINEDCREDENTIALTYPE",
                    "description": "Option: predefinedCredentialType",
                    "isAlternative": true,
                    "credentialType": "predefinedCredentialType"
                  },
                  {
                    "field": "credentials",
                    "variable": "GENERICCREDENTIALTYPE",
                    "description": "Option: genericCredentialType",
                    "isAlternative": true,
                    "credentialType": "genericCredentialType"
                  }
                ]
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "status": "configured",
                "isReady": true,
                "purpose": "Execute custom JavaScript code",
                "configured": [
                  {
                    "field": "jsCode",
                    "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                    "description": "jsCode"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "modelId",
                    "value": "gpt-3.5-turbo",
                    "description": "modelId"
                  },
                  {
                    "field": "messages",
                    "value": {
                      "values": [
                        {
                          "role": "system",
                          "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                        },
                        {
                          "role": "user",
                          "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                        }
                      ]
                    },
                    "description": "messages"
                  },
                  {
                    "field": "options",
                    "value": {
                      "maxTokens": 500,
                      "temperature": 0.7
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "status": "needs_credentials",
                "isReady": false,
                "purpose": "Send messages to Slack",
                "configured": [
                  {
                    "field": "resource",
                    "value": "message",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "post",
                    "description": "operation"
                  },
                  {
                    "field": "channel",
                    "value": "#development",
                    "description": "channel"
                  },
                  {
                    "field": "text",
                    "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                    "description": "text"
                  },
                  {
                    "field": "otherOptions",
                    "value": {
                      "mrkdwn": true
                    },
                    "description": "otherOptions"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "ACCESSTOKEN",
                    "description": "Option: accessToken",
                    "isAlternative": true,
                    "credentialType": "accessToken"
                  },
                  {
                    "field": "credentials",
                    "variable": "OAUTH2",
                    "description": "Option: oAuth2",
                    "isAlternative": true,
                    "credentialType": "oAuth2"
                  }
                ]
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "status": "needs_decisions",
                "isReady": false,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "resource",
                    "value": "databasePage",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "create",
                    "description": "operation"
                  },
                  {
                    "field": "title",
                    "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                    "description": "title"
                  },
                  {
                    "field": "propertiesUi",
                    "value": {
                      "propertyValues": [
                        {
                          "key": "Summary",
                          "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                        },
                        {
                          "key": "PR Count",
                          "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                        },
                        {
                          "key": "Week Start",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                        },
                        {
                          "key": "Week End",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                        }
                      ]
                    },
                    "description": "propertiesUi"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "databaseId",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"your-database-id\" appears to be a placeholder"
                  }
                ],
                "needsCredentials": []
              }
            ],
            "timestamp": "2025-08-17T14:43:05.553Z",
            "isComplete": false,
            "totalNodes": 6,
            "configuredNodes": 3,
            "missingCredentials": [
              "PREDEFINEDCREDENTIALTYPE",
              "GENERICCREDENTIALTYPE",
              "ACCESSTOKEN",
              "OAUTH2"
            ]
          },
          "operationHistory": [
            {
              "type": "completePhase",
              "phase": "discovery",
              "timestamp": "2025-08-17T14:42:17.393Z"
            },
            {
              "node": {
                "id": "task_node_1",
                "type": "nodes-base.httpRequest",
                "config": {
                  "url": "",
                  "method": "GET",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "retryOnFail": true,
                  "authentication": "none",
                  "alwaysOutputData": true,
                  "waitBetweenTries": 1000
                },
                "purpose": "Make a simple GET request to retrieve data from an API",
                "displayName": "get api data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_4",
                "type": "nodes-base.slack",
                "config": {
                  "text": "",
                  "channel": "",
                  "onError": "continueRegularOutput",
                  "maxTries": 2,
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "retryOnFail": true,
                  "waitBetweenTries": 2000
                },
                "purpose": "Send a message to Slack channel",
                "displayName": "send slack message",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_4",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_3",
                "type": "nodes-base.openAi",
                "config": {
                  "modelId": "gpt-3.5-turbo",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": ""
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message",
                  "retryOnFail": true,
                  "alwaysOutputData": true,
                  "waitBetweenTries": 5000
                },
                "purpose": "Send a message to an AI model and get response",
                "displayName": "chat with ai",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_3",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_2",
                "type": "nodes-base.code",
                "config": {
                  "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                  "language": "javaScript"
                },
                "purpose": "Transform data structure using JavaScript",
                "displayName": "transform data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_2",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_1",
                "type": "nodes-base.scheduleTrigger",
                "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_2",
                "type": "nodes-base.notion",
                "purpose": "Post summarized PR data to Notion database or page"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_2",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "type": "setSEOMetadata",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "setPhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:34.406Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "sendQuery": true,
                  "sendHeaders": true,
                  "authentication": "predefinedCredentialType",
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  },
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "nodeCredentialType": "githubApi"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "nodeId": "task_node_1",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "nodeType": "nodes-base.httpRequest",
              "timestamp": "2025-08-17T14:42:34.593Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "operation": "post",
                  "parameters": {}
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "waitBetweenTries": 2000
              },
              "nodeId": "task_node_4",
              "purpose": "Send a message to Slack channel",
              "nodeType": "nodes-base.slack",
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_4",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "nodeId": "task_node_3",
              "purpose": "Send a message to an AI model and get response",
              "nodeType": "nodes-base.openAi",
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_3",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "nodeId": "task_node_2",
              "purpose": "Transform data structure using JavaScript",
              "nodeType": "nodes-base.code",
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.114Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
              "timestamp": "2025-08-17T14:42:35.114Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "timestamp": "2025-08-17T14:42:35.235Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.397Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
              "timestamp": "2025-08-17T14:42:35.397Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "timestamp": "2025-08-17T14:42:35.527Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "completePhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "setPhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.554Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.3
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "channel": "#development",
                      "resource": "message",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.1
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.1
                  }
                ],
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:05.734Z"
            },
            {
              "type": "setBuildPhases",
              "phases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "setConfigAnalysis",
              "analysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "completePhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "setPhase",
              "phase": "validation",
              "timestamp": "2025-08-17T14:43:22.543Z"
            },
            {
              "type": "validateNode",
              "nodeId": "openAi_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "openAi_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "slack_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "slack_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "scheduleTrigger_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "scheduleTrigger_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "notion_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "notion_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "scheduleTrigger_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "httpRequest_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "code_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "openAi_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "slack_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:23.024Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:23.024Z"
            },
            {
              "type": "completePhase",
              "phase": "validation",
              "timestamp": "2025-08-17T14:43:23.024Z"
            }
          ],
          "pendingClarifications": [],
          "clarificationHistory": []
        }
      },
      "stateChanges": {},
      "dataFlow": {
        "input": {
          "workflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                  250,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "name": "Friday Trigger",
                "typeVersion": 1,
                "onError": "stopWorkflow"
              },
              {
                "id": "httpRequest_1",
                "type": "n8n-nodes-base.httpRequest",
                "position": [
                  550,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  }
                },
                "name": "Get GitHub PRs",
                "typeVersion": 4.2,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "code_1",
                "type": "n8n-nodes-base.code",
                "position": [
                  850,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "name": "Transform PR Data",
                "typeVersion": 2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "openAi_1",
                "type": "n8n-nodes-base.openAi",
                "position": [
                  1150,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                      }
                    ]
                  },
                  "options": {
                    "temperature": 0.7,
                    "maxTokens": 500
                  }
                },
                "name": "Summarize PRs",
                "typeVersion": 1.3,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "slack_1",
                "type": "n8n-nodes-base.slack",
                "position": [
                  1450,
                  200
                ],
                "parameters": {
                  "resource": "message",
                  "operation": "post",
                  "channel": "#development",
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "name": "Post to Slack",
                "typeVersion": 2.1,
                "onError": "continueRegularOutput",
                "maxTries": 2
              },
              {
                "id": "notion_1",
                "type": "n8n-nodes-base.notion",
                "position": [
                  1450,
                  400
                ],
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "name": "Post to Notion",
                "typeVersion": 2.1,
                "onError": "continueRegularOutput"
              }
            ],
            "connections": {
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "saveDataSuccessExecution": "all",
              "saveDataErrorExecution": "all",
              "saveManualExecutions": true
            }
          }
        },
        "output": {
          "validatedWorkflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                  250,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "name": "Friday Trigger",
                "typeVersion": 1.2,
                "onError": "stopWorkflow"
              },
              {
                "id": "httpRequest_1",
                "type": "n8n-nodes-base.httpRequest",
                "position": [
                  550,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  }
                },
                "name": "Get GitHub PRs",
                "typeVersion": 4.2,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "code_1",
                "type": "n8n-nodes-base.code",
                "position": [
                  850,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "name": "Transform PR Data",
                "typeVersion": 2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "openAi_1",
                "type": "n8n-nodes-base.openAi",
                "position": [
                  1150,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                      }
                    ]
                  },
                  "options": {
                    "temperature": 0.7,
                    "maxTokens": 500
                  }
                },
                "name": "Summarize PRs",
                "typeVersion": 1.1,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "slack_1",
                "type": "n8n-nodes-base.slack",
                "position": [
                  1450,
                  200
                ],
                "parameters": {
                  "resource": "message",
                  "operation": "post",
                  "select": "channel",
                  "channelId": "#development",
                  "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "name": "Post to Slack",
                "typeVersion": 2.3,
                "onError": "continueRegularOutput",
                "maxTries": 2
              },
              {
                "id": "notion_1",
                "type": "n8n-nodes-base.notion",
                "position": [
                  1450,
                  400
                ],
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "name": "Post to Notion",
                "typeVersion": 2.2,
                "onError": "continueRegularOutput"
              }
            ],
            "connections": {
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "saveDataSuccessExecution": "all",
              "saveDataErrorExecution": "all",
              "saveManualExecutions": true
            },
            "valid": true
          },
          "report": {
            "initial": {
              "workflow": {
                "errors": [
                  {
                    "node": "Summarize PRs",
                    "message": "typeVersion 1.3 exceeds maximum supported version 1.1"
                  },
                  {
                    "node": "Post to Slack",
                    "message": {
                      "type": "missing_required",
                      "property": "select",
                      "message": "Required property 'Send Message To' is missing",
                      "fix": "Add select to your configuration"
                    }
                  },
                  {
                    "node": "Summarize PRs",
                    "message": "Expression error: messages.values[1].content: Template literals ${} are not supported. Use string concatenation instead"
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Expression error: text: Nested expressions are not supported"
                  },
                  {
                    "node": "workflow",
                    "message": "Workflow validation failed: e.message.includes is not a function"
                  },
                  {
                    "node": "Friday Trigger",
                    "message": "Outdated typeVersion: 1. Latest is 1.2",
                    "type": "typeVersion",
                    "severity": "error"
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Outdated typeVersion: 2.1. Latest is 2.3",
                    "type": "typeVersion",
                    "severity": "error"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Outdated typeVersion: 2.1. Latest is 2.2",
                    "type": "typeVersion",
                    "severity": "error"
                  }
                ],
                "warnings": [
                  {
                    "node": "Get GitHub PRs",
                    "message": {
                      "type": "security",
                      "property": "nodeCredentialType",
                      "message": "Hardcoded nodeCredentialType detected",
                      "suggestion": "Use n8n credentials or expressions instead of hardcoding sensitive values"
                    }
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Expression warning: text: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Expression warning: text: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Expression warning: text: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Slack",
                    "message": "Expression warning: text: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[0].textContent: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[1].numberValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[2].dateValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[3].dateValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "workflow",
                    "message": "Consider adding error handling to your workflow"
                  }
                ],
                "valid": false,
                "statistics": {
                  "totalNodes": 6,
                  "enabledNodes": 6,
                  "triggerNodes": 1,
                  "validConnections": 5,
                  "invalidConnections": 0,
                  "expressionsValidated": 1,
                  "errorCount": 5,
                  "warningCount": 13
                }
              },
              "connections": {
                "errors": [],
                "warnings": []
              },
              "expressions": {
                "errors": [],
                "warnings": []
              }
            },
            "fixesApplied": [
              {
                "type": "entity-replacement",
                "attempt": 1,
                "timestamp": "2025-08-17T14:43:17.467Z",
                "description": "Replaced 4 nodes",
                "reasoning": [
                  "Updated Summarize PRs typeVersion from 1.3 to 1.1 (maximum supported version)",
                  "Fixed expression in Summarize PRs user message content by converting template literals to single expression format with string interpolation",
                  "Added required 'select' property to Post to Slack node with value 'channel' and changed 'channel' parameter to 'channelId'",
                  "Fixed nested expressions in Post to Slack text field by converting to single expression with template literals",
                  "Updated Post to Slack typeVersion from 2.1 to 2.3 (latest version)",
                  "Updated Friday Trigger typeVersion from 1 to 1.2 (latest version)",
                  "Updated Post to Notion typeVersion from 2.1 to 2.2 (latest version)",
                  "Fixed nested expression in Post to Notion title field by converting to single expression format"
                ],
                "entitiesFixed": {
                  "nodes": [
                    "openAi_1",
                    "slack_1",
                    "scheduleTrigger_1",
                    "notion_1"
                  ],
                  "connections": false
                }
              },
              {
                "type": "entity-replacement",
                "attempt": 2,
                "timestamp": "2025-08-17T14:43:21.965Z",
                "description": "Replaced 1 nodes",
                "reasoning": [
                  "Fixed template literal syntax error in title field by converting from template literal format `Weekly PR Summary - ${new Date().toLocaleDateString()}` to string concatenation format 'Weekly PR Summary - ' + new Date().toLocaleDateString(). n8n does not support ES6 template literals with ${} syntax, so string concatenation must be used instead."
                ],
                "entitiesFixed": {
                  "nodes": [
                    "notion_1"
                  ],
                  "connections": false
                }
              }
            ],
            "final": {
              "workflow": {
                "errors": [],
                "warnings": [
                  {
                    "node": "Get GitHub PRs",
                    "message": {
                      "type": "security",
                      "property": "nodeCredentialType",
                      "message": "Hardcoded nodeCredentialType detected",
                      "suggestion": "Use n8n credentials or expressions instead of hardcoding sensitive values"
                    }
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[0].textContent: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[1].numberValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[2].dateValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "Post to Notion",
                    "message": "Expression warning: propertiesUi.propertyValues[3].dateValue: Possible missing $ prefix for variable (e.g., use $json instead of json)"
                  },
                  {
                    "node": "workflow",
                    "message": "Consider adding error handling to your workflow"
                  }
                ],
                "valid": true,
                "statistics": {
                  "totalNodes": 6,
                  "enabledNodes": 6,
                  "triggerNodes": 1,
                  "validConnections": 5,
                  "invalidConnections": 0,
                  "expressionsValidated": 0,
                  "errorCount": 0,
                  "warningCount": 6
                }
              },
              "connections": {
                "errors": [],
                "warnings": []
              },
              "expressions": {
                "errors": [],
                "warnings": []
              }
            },
            "attempts": 3
          }
        },
        "transformations": [
          "Validation Check",
          "Error Detection",
          "Automatic Fixes"
        ]
      },
      "stateDelta": {
        "added": {
          "state": {
            "workflow": {
              "valid": true
            }
          }
        },
        "modified": {
          "state": {
            "old": {
              "phase": "validation",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.3
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "channel": "#development",
                      "resource": "message",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.1
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.1
                  }
                ],
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "configAnalysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "setPhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.554Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.3
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                          "channel": "#development",
                          "resource": "message",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.1
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.1
                      }
                    ],
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:05.734Z"
                },
                {
                  "type": "setBuildPhases",
                  "phases": [
                    {
                      "type": "trigger",
                      "nodeIds": [
                        "scheduleTrigger_1"
                      ],
                      "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    {
                      "type": "data_collection",
                      "nodeIds": [
                        "httpRequest_1"
                      ],
                      "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "code_1"
                      ],
                      "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "openAi_1"
                      ],
                      "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    {
                      "type": "notification",
                      "nodeIds": [
                        "slack_1",
                        "notion_1"
                      ],
                      "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    }
                  ],
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setConfigAnalysis",
                  "analysis": {
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "rule",
                            "value": {
                              "interval": [
                                {
                                  "field": "cronExpression",
                                  "expression": "0 9 * * 5"
                                }
                              ]
                            },
                            "description": "rule"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "status": "partial",
                        "isReady": false,
                        "purpose": "Make HTTP API request",
                        "configured": [
                          {
                            "field": "authentication",
                            "value": "predefinedCredentialType",
                            "description": "authentication"
                          },
                          {
                            "field": "nodeCredentialType",
                            "value": "githubApi",
                            "description": "nodeCredentialType"
                          },
                          {
                            "field": "options",
                            "value": {
                              "response": {
                                "response": {
                                  "responseFormat": "json"
                                }
                              }
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "url",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                          },
                          {
                            "field": "method",
                            "options": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "PATCH",
                              "HEAD",
                              "OPTIONS"
                            ],
                            "decision": "Provide required value",
                            "description": "Required field \"method\" is missing"
                          }
                        ],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "PREDEFINEDCREDENTIALTYPE",
                            "description": "Option: predefinedCredentialType",
                            "isAlternative": true,
                            "credentialType": "predefinedCredentialType"
                          },
                          {
                            "field": "credentials",
                            "variable": "GENERICCREDENTIALTYPE",
                            "description": "Option: genericCredentialType",
                            "isAlternative": true,
                            "credentialType": "genericCredentialType"
                          }
                        ]
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Execute custom JavaScript code",
                        "configured": [
                          {
                            "field": "jsCode",
                            "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                            "description": "jsCode"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "modelId",
                            "value": "gpt-3.5-turbo",
                            "description": "modelId"
                          },
                          {
                            "field": "messages",
                            "value": {
                              "values": [
                                {
                                  "role": "system",
                                  "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                                },
                                {
                                  "role": "user",
                                  "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                                }
                              ]
                            },
                            "description": "messages"
                          },
                          {
                            "field": "options",
                            "value": {
                              "maxTokens": 500,
                              "temperature": 0.7
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "status": "needs_credentials",
                        "isReady": false,
                        "purpose": "Send messages to Slack",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "message",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "post",
                            "description": "operation"
                          },
                          {
                            "field": "channel",
                            "value": "#development",
                            "description": "channel"
                          },
                          {
                            "field": "text",
                            "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                            "description": "text"
                          },
                          {
                            "field": "otherOptions",
                            "value": {
                              "mrkdwn": true
                            },
                            "description": "otherOptions"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "ACCESSTOKEN",
                            "description": "Option: accessToken",
                            "isAlternative": true,
                            "credentialType": "accessToken"
                          },
                          {
                            "field": "credentials",
                            "variable": "OAUTH2",
                            "description": "Option: oAuth2",
                            "isAlternative": true,
                            "credentialType": "oAuth2"
                          }
                        ]
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "status": "needs_decisions",
                        "isReady": false,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "databasePage",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "create",
                            "description": "operation"
                          },
                          {
                            "field": "title",
                            "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                            "description": "title"
                          },
                          {
                            "field": "propertiesUi",
                            "value": {
                              "propertyValues": [
                                {
                                  "key": "Summary",
                                  "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                                },
                                {
                                  "key": "PR Count",
                                  "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                                },
                                {
                                  "key": "Week Start",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                                },
                                {
                                  "key": "Week End",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                                }
                              ]
                            },
                            "description": "propertiesUi"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "databaseId",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"your-database-id\" appears to be a placeholder"
                          }
                        ],
                        "needsCredentials": []
                      }
                    ],
                    "timestamp": "2025-08-17T14:43:05.553Z",
                    "isComplete": false,
                    "totalNodes": 6,
                    "configuredNodes": 3,
                    "missingCredentials": [
                      "PREDEFINEDCREDENTIALTYPE",
                      "GENERICCREDENTIALTYPE",
                      "ACCESSTOKEN",
                      "OAUTH2"
                    ]
                  },
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "completePhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.735Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            },
            "new": {
              "phase": "documentation",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "configAnalysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "setPhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.554Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.3
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                          "channel": "#development",
                          "resource": "message",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.1
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.1
                      }
                    ],
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:05.734Z"
                },
                {
                  "type": "setBuildPhases",
                  "phases": [
                    {
                      "type": "trigger",
                      "nodeIds": [
                        "scheduleTrigger_1"
                      ],
                      "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    {
                      "type": "data_collection",
                      "nodeIds": [
                        "httpRequest_1"
                      ],
                      "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "code_1"
                      ],
                      "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "openAi_1"
                      ],
                      "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    {
                      "type": "notification",
                      "nodeIds": [
                        "slack_1",
                        "notion_1"
                      ],
                      "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    }
                  ],
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setConfigAnalysis",
                  "analysis": {
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "rule",
                            "value": {
                              "interval": [
                                {
                                  "field": "cronExpression",
                                  "expression": "0 9 * * 5"
                                }
                              ]
                            },
                            "description": "rule"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "status": "partial",
                        "isReady": false,
                        "purpose": "Make HTTP API request",
                        "configured": [
                          {
                            "field": "authentication",
                            "value": "predefinedCredentialType",
                            "description": "authentication"
                          },
                          {
                            "field": "nodeCredentialType",
                            "value": "githubApi",
                            "description": "nodeCredentialType"
                          },
                          {
                            "field": "options",
                            "value": {
                              "response": {
                                "response": {
                                  "responseFormat": "json"
                                }
                              }
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "url",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                          },
                          {
                            "field": "method",
                            "options": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "PATCH",
                              "HEAD",
                              "OPTIONS"
                            ],
                            "decision": "Provide required value",
                            "description": "Required field \"method\" is missing"
                          }
                        ],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "PREDEFINEDCREDENTIALTYPE",
                            "description": "Option: predefinedCredentialType",
                            "isAlternative": true,
                            "credentialType": "predefinedCredentialType"
                          },
                          {
                            "field": "credentials",
                            "variable": "GENERICCREDENTIALTYPE",
                            "description": "Option: genericCredentialType",
                            "isAlternative": true,
                            "credentialType": "genericCredentialType"
                          }
                        ]
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Execute custom JavaScript code",
                        "configured": [
                          {
                            "field": "jsCode",
                            "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                            "description": "jsCode"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "modelId",
                            "value": "gpt-3.5-turbo",
                            "description": "modelId"
                          },
                          {
                            "field": "messages",
                            "value": {
                              "values": [
                                {
                                  "role": "system",
                                  "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                                },
                                {
                                  "role": "user",
                                  "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                                }
                              ]
                            },
                            "description": "messages"
                          },
                          {
                            "field": "options",
                            "value": {
                              "maxTokens": 500,
                              "temperature": 0.7
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "status": "needs_credentials",
                        "isReady": false,
                        "purpose": "Send messages to Slack",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "message",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "post",
                            "description": "operation"
                          },
                          {
                            "field": "channel",
                            "value": "#development",
                            "description": "channel"
                          },
                          {
                            "field": "text",
                            "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                            "description": "text"
                          },
                          {
                            "field": "otherOptions",
                            "value": {
                              "mrkdwn": true
                            },
                            "description": "otherOptions"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "ACCESSTOKEN",
                            "description": "Option: accessToken",
                            "isAlternative": true,
                            "credentialType": "accessToken"
                          },
                          {
                            "field": "credentials",
                            "variable": "OAUTH2",
                            "description": "Option: oAuth2",
                            "isAlternative": true,
                            "credentialType": "oAuth2"
                          }
                        ]
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "status": "needs_decisions",
                        "isReady": false,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "databasePage",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "create",
                            "description": "operation"
                          },
                          {
                            "field": "title",
                            "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                            "description": "title"
                          },
                          {
                            "field": "propertiesUi",
                            "value": {
                              "propertyValues": [
                                {
                                  "key": "Summary",
                                  "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                                },
                                {
                                  "key": "PR Count",
                                  "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                                },
                                {
                                  "key": "Week Start",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                                },
                                {
                                  "key": "Week End",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                                }
                              ]
                            },
                            "description": "propertiesUi"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "databaseId",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"your-database-id\" appears to be a placeholder"
                          }
                        ],
                        "needsCredentials": []
                      }
                    ],
                    "timestamp": "2025-08-17T14:43:05.553Z",
                    "isComplete": false,
                    "totalNodes": 6,
                    "configuredNodes": 3,
                    "missingCredentials": [
                      "PREDEFINEDCREDENTIALTYPE",
                      "GENERICCREDENTIALTYPE",
                      "ACCESSTOKEN",
                      "OAUTH2"
                    ]
                  },
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "completePhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setPhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:22.543Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "openAi_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "slack_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "scheduleTrigger_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "httpRequest_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "code_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.2
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.1
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                          "select": "channel",
                          "resource": "message",
                          "channelId": "#development",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.3
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.2
                      }
                    ],
                    "valid": true,
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "completePhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            }
          }
        },
        "removed": [],
        "unchanged": [
          "sessionId",
          "createdAt"
        ]
      }
    },
    "documentation": {
      "name": "Documentation",
      "success": true,
      "metrics": {
        "startTime": 1755441803364,
        "endTime": 1755441804023,
        "duration": 659,
        "memoryUsage": {
          "heapUsed": 1563136,
          "heapTotal": 40288256,
          "external": 7917968
        }
      },
      "logs": [
        {
          "timestamp": "2025-08-17T14:43:23.364Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Starting documentation phase"
        },
        {
          "timestamp": "2025-08-17T14:43:23.364Z",
          "level": "DEBUG",
          "source": "Claude",
          "message": "Sending request for documentation phase"
        },
        {
          "timestamp": "2025-08-17T14:43:23.921Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Added 5 sticky notes for documentation"
        },
        {
          "timestamp": "2025-08-17T14:43:24.022Z",
          "level": "DEBUG",
          "source": "Orchestrator",
          "message": "Session state updated"
        },
        {
          "timestamp": "2025-08-17T14:43:24.022Z",
          "level": "INFO",
          "source": "Orchestrator",
          "message": "Data flow captured: 3 transformations"
        }
      ],
      "nodes": [],
      "sessionState": {
        "sessionId": "complete_e2e_user_test_1755441721374",
        "createdAt": "2025-08-17T14:42:01.674Z",
        "state": {
          "phase": "complete",
          "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
          "discovered": [
            {
              "id": "task_node_1",
              "type": "nodes-base.httpRequest",
              "config": {
                "url": "",
                "method": "GET",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "retryOnFail": true,
                "authentication": "none",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "purpose": "Make a simple GET request to retrieve data from an API",
              "displayName": "get api data",
              "isPreConfigured": true
            },
            {
              "id": "task_node_4",
              "type": "nodes-base.slack",
              "config": {
                "text": "",
                "channel": "",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "resource": "message",
                "operation": "post",
                "parameters": {},
                "retryOnFail": true,
                "waitBetweenTries": 2000
              },
              "purpose": "Send a message to Slack channel",
              "displayName": "send slack message",
              "isPreConfigured": true
            },
            {
              "id": "task_node_3",
              "type": "nodes-base.openAi",
              "config": {
                "modelId": "gpt-3.5-turbo",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "messages": {
                  "values": [
                    {
                      "role": "user",
                      "content": ""
                    }
                  ]
                },
                "resource": "chat",
                "operation": "message",
                "retryOnFail": true,
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "purpose": "Send a message to an AI model and get response",
              "displayName": "chat with ai",
              "isPreConfigured": true
            },
            {
              "id": "task_node_2",
              "type": "nodes-base.code",
              "config": {
                "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                "language": "javaScript"
              },
              "purpose": "Transform data structure using JavaScript",
              "displayName": "transform data",
              "isPreConfigured": true
            },
            {
              "id": "search_node_1",
              "type": "nodes-base.scheduleTrigger",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
            },
            {
              "id": "search_node_2",
              "type": "nodes-base.notion",
              "purpose": "Post summarized PR data to Notion database or page"
            }
          ],
          "selected": [
            "task_node_1",
            "task_node_4",
            "task_node_3",
            "task_node_2",
            "search_node_1",
            "search_node_2"
          ],
          "configured": {},
          "validated": {},
          "workflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "onError": "stopWorkflow",
                "position": [
                  470,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "typeVersion": 1.2
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  870,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  },
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi"
                },
                "typeVersion": 4.2
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "onError": "continueRegularOutput",
                "position": [
                  1270,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "typeVersion": 2
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "position": [
                  1470,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "options": {
                    "maxTokens": 500,
                    "temperature": 0.7
                  },
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                      }
                    ]
                  }
                },
                "typeVersion": 1.1
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "position": [
                  1870,
                  250
                ],
                "parameters": {
                  "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "#development",
                  "operation": "post",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "typeVersion": 2.3
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "onError": "continueRegularOutput",
                "position": [
                  1870,
                  400
                ],
                "parameters": {
                  "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "typeVersion": 2.2
              },
              {
                "id": "sticky_triggers_1755441803511",
                "name": "Triggers Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  390,
                  10
                ],
                "parameters": {
                  "color": 5,
                  "width": 310,
                  "height": 530,
                  "content": "## 📥 Triggers\nInitiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                "typeVersion": 1
              },
              {
                "id": "sticky_inputs_1755441803512",
                "name": "Inputs Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  790,
                  10
                ],
                "parameters": {
                  "color": 5,
                  "width": 310,
                  "height": 530,
                  "content": "## 📊 Inputs\nFetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                "typeVersion": 1
              },
              {
                "id": "sticky_transforms_1755441803512",
                "name": "Transform Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  1230,
                  10
                ],
                "parameters": {
                  "color": 5,
                  "width": 430,
                  "height": 530,
                  "content": "## ⚙️ Transform\nFilters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization.\n\nUses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                "typeVersion": 1
              },
              {
                "id": "sticky_outputs_1755441803512",
                "name": "Outputs Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  1790,
                  10
                ],
                "parameters": {
                  "color": 6,
                  "width": 310,
                  "height": 530,
                  "content": "## 🚀 Outputs\nSimultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                },
                "typeVersion": 1
              },
              {
                "id": "sticky_promo_1755441803512",
                "name": "Workflow Overview",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  50,
                  10
                ],
                "parameters": {
                  "color": 4,
                  "width": 280,
                  "height": 530,
                  "content": "## 🚀 Grow your AI business\n\nNeed help in implementing this workflow for your business? Join the Ghost Team community.\n\nThis workflow is made with 💚 by Ghost Team."
                },
                "typeVersion": 1
              }
            ],
            "valid": true,
            "settings": {
              "executionOrder": "v1",
              "saveManualExecutions": true,
              "saveDataErrorExecution": "all",
              "saveDataSuccessExecution": "all"
            },
            "connections": {
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            }
          },
          "seo": {
            "slug": "automate-weekly-github-pr-summaries-721374",
            "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
            "category": "Automation",
            "keywords": [
              "github pull request",
              "workflow automation",
              "slack integration",
              "notion integration",
              "data summarization",
              "weekly reporting",
              "productivity boost",
              "collaboration enhancement",
              "business intelligence"
            ],
            "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
            "generatedAt": "2025-08-17T14:42:19.411Z",
            "integrations": [
              "GitHub",
              "Slack",
              "Notion"
            ],
            "businessValue": "Streamlined Reporting"
          },
          "buildPhases": [
            {
              "type": "trigger",
              "nodeIds": [
                "scheduleTrigger_1"
              ],
              "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
            },
            {
              "type": "data_collection",
              "nodeIds": [
                "httpRequest_1"
              ],
              "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "code_1"
              ],
              "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
            },
            {
              "type": "data_processing",
              "nodeIds": [
                "openAi_1"
              ],
              "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
            },
            {
              "type": "notification",
              "nodeIds": [
                "slack_1",
                "notion_1"
              ],
              "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
            }
          ],
          "configAnalysis": {
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "name": "Friday Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "rule",
                    "value": {
                      "interval": [
                        {
                          "field": "cronExpression",
                          "expression": "0 9 * * 5"
                        }
                      ]
                    },
                    "description": "rule"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "httpRequest_1",
                "name": "Get GitHub PRs",
                "type": "n8n-nodes-base.httpRequest",
                "status": "partial",
                "isReady": false,
                "purpose": "Make HTTP API request",
                "configured": [
                  {
                    "field": "authentication",
                    "value": "predefinedCredentialType",
                    "description": "authentication"
                  },
                  {
                    "field": "nodeCredentialType",
                    "value": "githubApi",
                    "description": "nodeCredentialType"
                  },
                  {
                    "field": "options",
                    "value": {
                      "response": {
                        "response": {
                          "responseFormat": "json"
                        }
                      }
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "url",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                  },
                  {
                    "field": "method",
                    "options": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS"
                    ],
                    "decision": "Provide required value",
                    "description": "Required field \"method\" is missing"
                  }
                ],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "PREDEFINEDCREDENTIALTYPE",
                    "description": "Option: predefinedCredentialType",
                    "isAlternative": true,
                    "credentialType": "predefinedCredentialType"
                  },
                  {
                    "field": "credentials",
                    "variable": "GENERICCREDENTIALTYPE",
                    "description": "Option: genericCredentialType",
                    "isAlternative": true,
                    "credentialType": "genericCredentialType"
                  }
                ]
              },
              {
                "id": "code_1",
                "name": "Transform PR Data",
                "type": "n8n-nodes-base.code",
                "status": "configured",
                "isReady": true,
                "purpose": "Execute custom JavaScript code",
                "configured": [
                  {
                    "field": "jsCode",
                    "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                    "description": "jsCode"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "openAi_1",
                "name": "Summarize PRs",
                "type": "n8n-nodes-base.openAi",
                "status": "configured",
                "isReady": true,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "modelId",
                    "value": "gpt-3.5-turbo",
                    "description": "modelId"
                  },
                  {
                    "field": "messages",
                    "value": {
                      "values": [
                        {
                          "role": "system",
                          "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                        },
                        {
                          "role": "user",
                          "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                        }
                      ]
                    },
                    "description": "messages"
                  },
                  {
                    "field": "options",
                    "value": {
                      "maxTokens": 500,
                      "temperature": 0.7
                    },
                    "description": "options"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": []
              },
              {
                "id": "slack_1",
                "name": "Post to Slack",
                "type": "n8n-nodes-base.slack",
                "status": "needs_credentials",
                "isReady": false,
                "purpose": "Send messages to Slack",
                "configured": [
                  {
                    "field": "resource",
                    "value": "message",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "post",
                    "description": "operation"
                  },
                  {
                    "field": "channel",
                    "value": "#development",
                    "description": "channel"
                  },
                  {
                    "field": "text",
                    "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                    "description": "text"
                  },
                  {
                    "field": "otherOptions",
                    "value": {
                      "mrkdwn": true
                    },
                    "description": "otherOptions"
                  }
                ],
                "needsDecisions": [],
                "needsCredentials": [
                  {
                    "field": "credentials",
                    "variable": "ACCESSTOKEN",
                    "description": "Option: accessToken",
                    "isAlternative": true,
                    "credentialType": "accessToken"
                  },
                  {
                    "field": "credentials",
                    "variable": "OAUTH2",
                    "description": "Option: oAuth2",
                    "isAlternative": true,
                    "credentialType": "oAuth2"
                  }
                ]
              },
              {
                "id": "notion_1",
                "name": "Post to Notion",
                "type": "n8n-nodes-base.notion",
                "status": "needs_decisions",
                "isReady": false,
                "purpose": "Process data",
                "configured": [
                  {
                    "field": "resource",
                    "value": "databasePage",
                    "description": "resource"
                  },
                  {
                    "field": "operation",
                    "value": "create",
                    "description": "operation"
                  },
                  {
                    "field": "title",
                    "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                    "description": "title"
                  },
                  {
                    "field": "propertiesUi",
                    "value": {
                      "propertyValues": [
                        {
                          "key": "Summary",
                          "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                        },
                        {
                          "key": "PR Count",
                          "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                        },
                        {
                          "key": "Week Start",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                        },
                        {
                          "key": "Week End",
                          "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                        }
                      ]
                    },
                    "description": "propertiesUi"
                  }
                ],
                "needsDecisions": [
                  {
                    "field": "databaseId",
                    "decision": "Replace placeholder value",
                    "description": "Current value \"your-database-id\" appears to be a placeholder"
                  }
                ],
                "needsCredentials": []
              }
            ],
            "timestamp": "2025-08-17T14:43:05.553Z",
            "isComplete": false,
            "totalNodes": 6,
            "configuredNodes": 3,
            "missingCredentials": [
              "PREDEFINEDCREDENTIALTYPE",
              "GENERICCREDENTIALTYPE",
              "ACCESSTOKEN",
              "OAUTH2"
            ]
          },
          "operationHistory": [
            {
              "type": "completePhase",
              "phase": "discovery",
              "timestamp": "2025-08-17T14:42:17.393Z"
            },
            {
              "node": {
                "id": "task_node_1",
                "type": "nodes-base.httpRequest",
                "config": {
                  "url": "",
                  "method": "GET",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "retryOnFail": true,
                  "authentication": "none",
                  "alwaysOutputData": true,
                  "waitBetweenTries": 1000
                },
                "purpose": "Make a simple GET request to retrieve data from an API",
                "displayName": "get api data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_4",
                "type": "nodes-base.slack",
                "config": {
                  "text": "",
                  "channel": "",
                  "onError": "continueRegularOutput",
                  "maxTries": 2,
                  "resource": "message",
                  "operation": "post",
                  "parameters": {},
                  "retryOnFail": true,
                  "waitBetweenTries": 2000
                },
                "purpose": "Send a message to Slack channel",
                "displayName": "send slack message",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_4",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_3",
                "type": "nodes-base.openAi",
                "config": {
                  "modelId": "gpt-3.5-turbo",
                  "onError": "continueRegularOutput",
                  "maxTries": 3,
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": ""
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message",
                  "retryOnFail": true,
                  "alwaysOutputData": true,
                  "waitBetweenTries": 5000
                },
                "purpose": "Send a message to an AI model and get response",
                "displayName": "chat with ai",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_3",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "task_node_2",
                "type": "nodes-base.code",
                "config": {
                  "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                  "language": "javaScript"
                },
                "purpose": "Transform data structure using JavaScript",
                "displayName": "transform data",
                "isPreConfigured": true
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "task_node_2",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_1",
                "type": "nodes-base.scheduleTrigger",
                "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_1",
              "timestamp": "2025-08-17T14:42:19.412Z"
            },
            {
              "node": {
                "id": "search_node_2",
                "type": "nodes-base.notion",
                "purpose": "Post summarized PR data to Notion database or page"
              },
              "type": "discoverNode",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "selectNode",
              "nodeId": "search_node_2",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "type": "setSEOMetadata",
              "timestamp": "2025-08-17T14:42:19.527Z"
            },
            {
              "type": "setPhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:34.406Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                  "method": "GET",
                  "sendQuery": true,
                  "sendHeaders": true,
                  "authentication": "predefinedCredentialType",
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "since",
                        "value": "{{ $now.minus({days: 7}).toISO() }}"
                      }
                    ]
                  },
                  "headerParameters": {
                    "parameters": [
                      {
                        "name": "Accept",
                        "value": "application/vnd.github.v3+json"
                      },
                      {
                        "name": "User-Agent",
                        "value": "n8n-workflow"
                      }
                    ]
                  },
                  "nodeCredentialType": "githubApi"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 1000
              },
              "nodeId": "task_node_1",
              "purpose": "Make a simple GET request to retrieve data from an API",
              "nodeType": "nodes-base.httpRequest",
              "timestamp": "2025-08-17T14:42:34.593Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Send weekly summary of merged PR titles to Slack channel",
                "onError": "continueRegularOutput",
                "maxTries": 2,
                "parameters": {
                  "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                  "select": "channel",
                  "resource": "message",
                  "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                  "operation": "post",
                  "parameters": {}
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "waitBetweenTries": 2000
              },
              "nodeId": "task_node_4",
              "purpose": "Send a message to Slack channel",
              "nodeType": "nodes-base.slack",
              "timestamp": "2025-08-17T14:42:34.704Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_4",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                "onError": "continueRegularOutput",
                "maxTries": 3,
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "user",
                        "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                      }
                    ]
                  },
                  "resource": "chat",
                  "operation": "message"
                },
                "retryOnFail": true,
                "typeVersion": "1",
                "alwaysOutputData": true,
                "waitBetweenTries": 5000
              },
              "nodeId": "task_node_3",
              "purpose": "Send a message to an AI model and get response",
              "nodeType": "nodes-base.openAi",
              "timestamp": "2025-08-17T14:42:34.823Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_3",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                  "language": "javaScript"
                }
              },
              "nodeId": "task_node_2",
              "purpose": "Transform data structure using JavaScript",
              "nodeType": "nodes-base.code",
              "timestamp": "2025-08-17T14:42:34.993Z"
            },
            {
              "type": "validateNode",
              "nodeId": "task_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.114Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
              "timestamp": "2025-08-17T14:42:35.114Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  },
                  "notice": ""
                },
                "typeVersion": "1.2"
              },
              "nodeId": "search_node_1",
              "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
              "nodeType": "nodes-base.scheduleTrigger",
              "timestamp": "2025-08-17T14:42:35.235Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.397Z"
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
              "timestamp": "2025-08-17T14:42:35.397Z",
              "operationIndex": 0
            },
            {
              "type": "configureNode",
              "config": {
                "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                "parameters": {
                  "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": {
                    "mode": "url",
                    "value": "={{ $vars.notionDatabaseUrl }}"
                  },
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "={{ $json.summary }}"
                      },
                      {
                        "key": "Date",
                        "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "={{ $json.prCount }}"
                      }
                    ]
                  }
                },
                "typeVersion": "2.2"
              },
              "nodeId": "search_node_2",
              "purpose": "Post summarized PR data to Notion database or page",
              "nodeType": "nodes-base.notion",
              "timestamp": "2025-08-17T14:42:35.527Z"
            },
            {
              "type": "validateNode",
              "nodeId": "search_node_2",
              "result": {
                "valid": true,
                "errors": []
              },
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "completePhase",
              "phase": "configuration",
              "timestamp": "2025-08-17T14:42:35.651Z"
            },
            {
              "type": "setPhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.554Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.3
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                      "channel": "#development",
                      "resource": "message",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.1
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.1
                  }
                ],
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:05.734Z"
            },
            {
              "type": "setBuildPhases",
              "phases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "setConfigAnalysis",
              "analysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "completePhase",
              "phase": "building",
              "timestamp": "2025-08-17T14:43:05.735Z"
            },
            {
              "type": "setPhase",
              "phase": "validation",
              "timestamp": "2025-08-17T14:43:22.543Z"
            },
            {
              "type": "validateNode",
              "nodeId": "openAi_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "openAi_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "slack_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "slack_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "scheduleTrigger_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "scheduleTrigger_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "notion_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": false,
                "errors": [
                  {
                    "nodeId": "notion_1",
                    "message": "Node replaced entirely",
                    "severity": "error"
                  }
                ]
              },
              "reasoning": "Node replaced to fix validation errors",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "scheduleTrigger_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "httpRequest_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "code_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "openAi_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "slack_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:22.763Z"
            },
            {
              "type": "validateNode",
              "nodeId": "notion_1",
              "result": {
                "valid": true,
                "errors": []
              },
              "reasoning": "Node passed all validation checks",
              "timestamp": "2025-08-17T14:43:23.024Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:23.024Z"
            },
            {
              "type": "completePhase",
              "phase": "validation",
              "timestamp": "2025-08-17T14:43:23.024Z"
            },
            {
              "type": "setPhase",
              "phase": "documentation",
              "timestamp": "2025-08-17T14:43:23.512Z"
            },
            {
              "type": "setWorkflow",
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      470,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      870,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      1270,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1470,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1870,
                      250
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1870,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  },
                  {
                    "id": "sticky_triggers_1755441803511",
                    "name": "Triggers Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      390,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 310,
                      "height": 530,
                      "content": "## 📥 Triggers\nInitiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_inputs_1755441803512",
                    "name": "Inputs Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      790,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 310,
                      "height": 530,
                      "content": "## 📊 Inputs\nFetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_transforms_1755441803512",
                    "name": "Transform Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      1230,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 430,
                      "height": 530,
                      "content": "## ⚙️ Transform\nFilters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization.\n\nUses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_outputs_1755441803512",
                    "name": "Outputs Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      1790,
                      10
                    ],
                    "parameters": {
                      "color": 6,
                      "width": 310,
                      "height": 530,
                      "content": "## 🚀 Outputs\nSimultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_promo_1755441803512",
                    "name": "Workflow Overview",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      50,
                      10
                    ],
                    "parameters": {
                      "color": 4,
                      "width": 280,
                      "height": 530,
                      "content": "## 🚀 Grow your AI business\n\nNeed help in implementing this workflow for your business? Join the Ghost Team community.\n\nThis workflow is made with 💚 by Ghost Team."
                    },
                    "typeVersion": 1
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "timestamp": "2025-08-17T14:43:23.712Z"
            },
            {
              "type": "completePhase",
              "phase": "documentation",
              "timestamp": "2025-08-17T14:43:23.712Z"
            }
          ],
          "pendingClarifications": [],
          "clarificationHistory": []
        }
      },
      "stateChanges": {},
      "dataFlow": {
        "input": {
          "validatedWorkflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                  470,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "name": "Friday Trigger",
                "typeVersion": 1.2,
                "onError": "stopWorkflow"
              },
              {
                "id": "httpRequest_1",
                "type": "n8n-nodes-base.httpRequest",
                "position": [
                  870,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  }
                },
                "name": "Get GitHub PRs",
                "typeVersion": 4.2,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "code_1",
                "type": "n8n-nodes-base.code",
                "position": [
                  1270,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "name": "Transform PR Data",
                "typeVersion": 2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "openAi_1",
                "type": "n8n-nodes-base.openAi",
                "position": [
                  1470,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                      }
                    ]
                  },
                  "options": {
                    "temperature": 0.7,
                    "maxTokens": 500
                  }
                },
                "name": "Summarize PRs",
                "typeVersion": 1.1,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "slack_1",
                "type": "n8n-nodes-base.slack",
                "position": [
                  1870,
                  250
                ],
                "parameters": {
                  "resource": "message",
                  "operation": "post",
                  "select": "channel",
                  "channelId": "#development",
                  "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "name": "Post to Slack",
                "typeVersion": 2.3,
                "onError": "continueRegularOutput",
                "maxTries": 2
              },
              {
                "id": "notion_1",
                "type": "n8n-nodes-base.notion",
                "position": [
                  1870,
                  400
                ],
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "name": "Post to Notion",
                "typeVersion": 2.2,
                "onError": "continueRegularOutput"
              }
            ],
            "connections": {
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "saveDataSuccessExecution": "all",
              "saveDataErrorExecution": "all",
              "saveManualExecutions": true
            },
            "valid": true
          }
        },
        "output": {
          "documentedWorkflow": {
            "name": "Weekly GitHub PR Summary to Slack and Notion",
            "nodes": [
              {
                "id": "scheduleTrigger_1",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                  470,
                  300
                ],
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "cronExpression",
                        "expression": "0 9 * * 5"
                      }
                    ]
                  }
                },
                "name": "Friday Trigger",
                "typeVersion": 1.2,
                "onError": "stopWorkflow"
              },
              {
                "id": "httpRequest_1",
                "type": "n8n-nodes-base.httpRequest",
                "position": [
                  870,
                  300
                ],
                "parameters": {
                  "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                  "authentication": "predefinedCredentialType",
                  "nodeCredentialType": "githubApi",
                  "options": {
                    "response": {
                      "response": {
                        "responseFormat": "json"
                      }
                    }
                  }
                },
                "name": "Get GitHub PRs",
                "typeVersion": 4.2,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "code_1",
                "type": "n8n-nodes-base.code",
                "position": [
                  1270,
                  300
                ],
                "parameters": {
                  "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                },
                "name": "Transform PR Data",
                "typeVersion": 2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "openAi_1",
                "type": "n8n-nodes-base.openAi",
                "position": [
                  1470,
                  300
                ],
                "parameters": {
                  "modelId": "gpt-3.5-turbo",
                  "messages": {
                    "values": [
                      {
                        "role": "system",
                        "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                      },
                      {
                        "role": "user",
                        "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                      }
                    ]
                  },
                  "options": {
                    "temperature": 0.7,
                    "maxTokens": 500
                  }
                },
                "name": "Summarize PRs",
                "typeVersion": 1.1,
                "onError": "continueRegularOutput",
                "maxTries": 3
              },
              {
                "id": "slack_1",
                "type": "n8n-nodes-base.slack",
                "position": [
                  1870,
                  250
                ],
                "parameters": {
                  "resource": "message",
                  "operation": "post",
                  "select": "channel",
                  "channelId": "#development",
                  "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                  "otherOptions": {
                    "mrkdwn": true
                  }
                },
                "name": "Post to Slack",
                "typeVersion": 2.3,
                "onError": "continueRegularOutput",
                "maxTries": 2
              },
              {
                "id": "notion_1",
                "type": "n8n-nodes-base.notion",
                "position": [
                  1870,
                  400
                ],
                "parameters": {
                  "resource": "databasePage",
                  "operation": "create",
                  "databaseId": "your-database-id",
                  "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                  "propertiesUi": {
                    "propertyValues": [
                      {
                        "key": "Summary",
                        "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                      },
                      {
                        "key": "PR Count",
                        "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                      },
                      {
                        "key": "Week Start",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                      },
                      {
                        "key": "Week End",
                        "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                      }
                    ]
                  }
                },
                "name": "Post to Notion",
                "typeVersion": 2.2,
                "onError": "continueRegularOutput"
              },
              {
                "id": "sticky_triggers_1755441803511",
                "name": "Triggers Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "typeVersion": 1,
                "position": [
                  390,
                  10
                ],
                "parameters": {
                  "content": "## 📥 Triggers\nInitiates the workflow every Friday at 9 AM to begin the weekly PR summary process.",
                  "height": 530,
                  "width": 310,
                  "color": 5
                }
              },
              {
                "id": "sticky_inputs_1755441803512",
                "name": "Inputs Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "typeVersion": 1,
                "position": [
                  790,
                  10
                ],
                "parameters": {
                  "content": "## 📊 Inputs\nFetches merged pull requests from GitHub API for the past week using authenticated requests.",
                  "height": 530,
                  "width": 310,
                  "color": 5
                }
              },
              {
                "id": "sticky_transforms_1755441803512",
                "name": "Transform Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "typeVersion": 1,
                "position": [
                  1230,
                  10
                ],
                "parameters": {
                  "content": "## ⚙️ Transform\nFilters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization.\n\nUses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements.",
                  "height": 530,
                  "width": 430,
                  "color": 5
                }
              },
              {
                "id": "sticky_outputs_1755441803512",
                "name": "Outputs Documentation",
                "type": "n8n-nodes-base.stickyNote",
                "typeVersion": 1,
                "position": [
                  1790,
                  10
                ],
                "parameters": {
                  "content": "## 🚀 Outputs\nSimultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping.",
                  "height": 530,
                  "width": 310,
                  "color": 6
                }
              },
              {
                "id": "sticky_promo_1755441803512",
                "name": "Workflow Overview",
                "type": "n8n-nodes-base.stickyNote",
                "typeVersion": 1,
                "position": [
                  50,
                  10
                ],
                "parameters": {
                  "content": "## 🚀 Grow your AI business\n\nNeed help in implementing this workflow for your business? Join the Ghost Team community.\n\nThis workflow is made with 💚 by Ghost Team.",
                  "height": 530,
                  "width": 280,
                  "color": 4
                }
              }
            ],
            "connections": {
              "Friday Trigger": {
                "main": [
                  [
                    {
                      "node": "Get GitHub PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Get GitHub PRs": {
                "main": [
                  [
                    {
                      "node": "Transform PR Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Transform PR Data": {
                "main": [
                  [
                    {
                      "node": "Summarize PRs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Summarize PRs": {
                "main": [
                  [
                    {
                      "node": "Post to Slack",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Post to Notion",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "saveDataSuccessExecution": "all",
              "saveDataErrorExecution": "all",
              "saveManualExecutions": true
            },
            "valid": true
          },
          "stickyNotesAdded": 5
        },
        "transformations": [
          "Documentation Generation",
          "Sticky Note Placement",
          "Workflow Finalization"
        ]
      },
      "stateDelta": {
        "added": {},
        "modified": {
          "state": {
            "old": {
              "phase": "documentation",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      250,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      550,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      850,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1150,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1450,
                      200
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1450,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "configAnalysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "setPhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.554Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.3
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                          "channel": "#development",
                          "resource": "message",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.1
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.1
                      }
                    ],
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:05.734Z"
                },
                {
                  "type": "setBuildPhases",
                  "phases": [
                    {
                      "type": "trigger",
                      "nodeIds": [
                        "scheduleTrigger_1"
                      ],
                      "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    {
                      "type": "data_collection",
                      "nodeIds": [
                        "httpRequest_1"
                      ],
                      "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "code_1"
                      ],
                      "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "openAi_1"
                      ],
                      "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    {
                      "type": "notification",
                      "nodeIds": [
                        "slack_1",
                        "notion_1"
                      ],
                      "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    }
                  ],
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setConfigAnalysis",
                  "analysis": {
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "rule",
                            "value": {
                              "interval": [
                                {
                                  "field": "cronExpression",
                                  "expression": "0 9 * * 5"
                                }
                              ]
                            },
                            "description": "rule"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "status": "partial",
                        "isReady": false,
                        "purpose": "Make HTTP API request",
                        "configured": [
                          {
                            "field": "authentication",
                            "value": "predefinedCredentialType",
                            "description": "authentication"
                          },
                          {
                            "field": "nodeCredentialType",
                            "value": "githubApi",
                            "description": "nodeCredentialType"
                          },
                          {
                            "field": "options",
                            "value": {
                              "response": {
                                "response": {
                                  "responseFormat": "json"
                                }
                              }
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "url",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                          },
                          {
                            "field": "method",
                            "options": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "PATCH",
                              "HEAD",
                              "OPTIONS"
                            ],
                            "decision": "Provide required value",
                            "description": "Required field \"method\" is missing"
                          }
                        ],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "PREDEFINEDCREDENTIALTYPE",
                            "description": "Option: predefinedCredentialType",
                            "isAlternative": true,
                            "credentialType": "predefinedCredentialType"
                          },
                          {
                            "field": "credentials",
                            "variable": "GENERICCREDENTIALTYPE",
                            "description": "Option: genericCredentialType",
                            "isAlternative": true,
                            "credentialType": "genericCredentialType"
                          }
                        ]
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Execute custom JavaScript code",
                        "configured": [
                          {
                            "field": "jsCode",
                            "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                            "description": "jsCode"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "modelId",
                            "value": "gpt-3.5-turbo",
                            "description": "modelId"
                          },
                          {
                            "field": "messages",
                            "value": {
                              "values": [
                                {
                                  "role": "system",
                                  "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                                },
                                {
                                  "role": "user",
                                  "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                                }
                              ]
                            },
                            "description": "messages"
                          },
                          {
                            "field": "options",
                            "value": {
                              "maxTokens": 500,
                              "temperature": 0.7
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "status": "needs_credentials",
                        "isReady": false,
                        "purpose": "Send messages to Slack",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "message",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "post",
                            "description": "operation"
                          },
                          {
                            "field": "channel",
                            "value": "#development",
                            "description": "channel"
                          },
                          {
                            "field": "text",
                            "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                            "description": "text"
                          },
                          {
                            "field": "otherOptions",
                            "value": {
                              "mrkdwn": true
                            },
                            "description": "otherOptions"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "ACCESSTOKEN",
                            "description": "Option: accessToken",
                            "isAlternative": true,
                            "credentialType": "accessToken"
                          },
                          {
                            "field": "credentials",
                            "variable": "OAUTH2",
                            "description": "Option: oAuth2",
                            "isAlternative": true,
                            "credentialType": "oAuth2"
                          }
                        ]
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "status": "needs_decisions",
                        "isReady": false,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "databasePage",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "create",
                            "description": "operation"
                          },
                          {
                            "field": "title",
                            "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                            "description": "title"
                          },
                          {
                            "field": "propertiesUi",
                            "value": {
                              "propertyValues": [
                                {
                                  "key": "Summary",
                                  "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                                },
                                {
                                  "key": "PR Count",
                                  "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                                },
                                {
                                  "key": "Week Start",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                                },
                                {
                                  "key": "Week End",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                                }
                              ]
                            },
                            "description": "propertiesUi"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "databaseId",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"your-database-id\" appears to be a placeholder"
                          }
                        ],
                        "needsCredentials": []
                      }
                    ],
                    "timestamp": "2025-08-17T14:43:05.553Z",
                    "isComplete": false,
                    "totalNodes": 6,
                    "configuredNodes": 3,
                    "missingCredentials": [
                      "PREDEFINEDCREDENTIALTYPE",
                      "GENERICCREDENTIALTYPE",
                      "ACCESSTOKEN",
                      "OAUTH2"
                    ]
                  },
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "completePhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setPhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:22.543Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "openAi_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "slack_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "scheduleTrigger_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "httpRequest_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "code_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.2
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.1
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                          "select": "channel",
                          "resource": "message",
                          "channelId": "#development",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.3
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.2
                      }
                    ],
                    "valid": true,
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "completePhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            },
            "new": {
              "phase": "complete",
              "userPrompt": "Collect merged PR titles from GitHub, summarize, and post to Slack and Notion each Friday.",
              "discovered": [
                {
                  "id": "task_node_1",
                  "type": "nodes-base.httpRequest",
                  "config": {
                    "url": "",
                    "method": "GET",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "retryOnFail": true,
                    "authentication": "none",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "displayName": "get api data",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_4",
                  "type": "nodes-base.slack",
                  "config": {
                    "text": "",
                    "channel": "",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "resource": "message",
                    "operation": "post",
                    "parameters": {},
                    "retryOnFail": true,
                    "waitBetweenTries": 2000
                  },
                  "purpose": "Send a message to Slack channel",
                  "displayName": "send slack message",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_3",
                  "type": "nodes-base.openAi",
                  "config": {
                    "modelId": "gpt-3.5-turbo",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "messages": {
                      "values": [
                        {
                          "role": "user",
                          "content": ""
                        }
                      ]
                    },
                    "resource": "chat",
                    "operation": "message",
                    "retryOnFail": true,
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "purpose": "Send a message to an AI model and get response",
                  "displayName": "chat with ai",
                  "isPreConfigured": true
                },
                {
                  "id": "task_node_2",
                  "type": "nodes-base.code",
                  "config": {
                    "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                    "language": "javaScript"
                  },
                  "purpose": "Transform data structure using JavaScript",
                  "displayName": "transform data",
                  "isPreConfigured": true
                },
                {
                  "id": "search_node_1",
                  "type": "nodes-base.scheduleTrigger",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                },
                {
                  "id": "search_node_2",
                  "type": "nodes-base.notion",
                  "purpose": "Post summarized PR data to Notion database or page"
                }
              ],
              "selected": [
                "task_node_1",
                "task_node_4",
                "task_node_3",
                "task_node_2",
                "search_node_1",
                "search_node_2"
              ],
              "configured": {},
              "validated": {},
              "workflow": {
                "name": "Weekly GitHub PR Summary to Slack and Notion",
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "onError": "stopWorkflow",
                    "position": [
                      470,
                      300
                    ],
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.2
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      870,
                      300
                    ],
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                      "options": {
                        "response": {
                          "response": {
                            "responseFormat": "json"
                          }
                        }
                      },
                      "authentication": "predefinedCredentialType",
                      "nodeCredentialType": "githubApi"
                    },
                    "typeVersion": 4.2
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "onError": "continueRegularOutput",
                    "position": [
                      1270,
                      300
                    ],
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                    },
                    "typeVersion": 2
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "position": [
                      1470,
                      300
                    ],
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "options": {
                        "maxTokens": 500,
                        "temperature": 0.7
                      },
                      "messages": {
                        "values": [
                          {
                            "role": "system",
                            "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                          },
                          {
                            "role": "user",
                            "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 1.1
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "position": [
                      1870,
                      250
                    ],
                    "parameters": {
                      "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "#development",
                      "operation": "post",
                      "otherOptions": {
                        "mrkdwn": true
                      }
                    },
                    "typeVersion": 2.3
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "onError": "continueRegularOutput",
                    "position": [
                      1870,
                      400
                    ],
                    "parameters": {
                      "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": "your-database-id",
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                          },
                          {
                            "key": "Week Start",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                          },
                          {
                            "key": "Week End",
                            "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": 2.2
                  },
                  {
                    "id": "sticky_triggers_1755441803511",
                    "name": "Triggers Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      390,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 310,
                      "height": 530,
                      "content": "## 📥 Triggers\nInitiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_inputs_1755441803512",
                    "name": "Inputs Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      790,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 310,
                      "height": 530,
                      "content": "## 📊 Inputs\nFetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_transforms_1755441803512",
                    "name": "Transform Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      1230,
                      10
                    ],
                    "parameters": {
                      "color": 5,
                      "width": 430,
                      "height": 530,
                      "content": "## ⚙️ Transform\nFilters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization.\n\nUses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_outputs_1755441803512",
                    "name": "Outputs Documentation",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      1790,
                      10
                    ],
                    "parameters": {
                      "color": 6,
                      "width": 310,
                      "height": 530,
                      "content": "## 🚀 Outputs\nSimultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    },
                    "typeVersion": 1
                  },
                  {
                    "id": "sticky_promo_1755441803512",
                    "name": "Workflow Overview",
                    "type": "n8n-nodes-base.stickyNote",
                    "position": [
                      50,
                      10
                    ],
                    "parameters": {
                      "color": 4,
                      "width": 280,
                      "height": 530,
                      "content": "## 🚀 Grow your AI business\n\nNeed help in implementing this workflow for your business? Join the Ghost Team community.\n\nThis workflow is made with 💚 by Ghost Team."
                    },
                    "typeVersion": 1
                  }
                ],
                "valid": true,
                "settings": {
                  "executionOrder": "v1",
                  "saveManualExecutions": true,
                  "saveDataErrorExecution": "all",
                  "saveDataSuccessExecution": "all"
                },
                "connections": {
                  "Summarize PRs": {
                    "main": [
                      [
                        {
                          "node": "Post to Slack",
                          "type": "main",
                          "index": 0
                        },
                        {
                          "node": "Post to Notion",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Friday Trigger": {
                    "main": [
                      [
                        {
                          "node": "Get GitHub PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Get GitHub PRs": {
                    "main": [
                      [
                        {
                          "node": "Transform PR Data",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  },
                  "Transform PR Data": {
                    "main": [
                      [
                        {
                          "node": "Summarize PRs",
                          "type": "main",
                          "index": 0
                        }
                      ]
                    ]
                  }
                }
              },
              "seo": {
                "slug": "automate-weekly-github-pr-summaries-721374",
                "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                "category": "Automation",
                "keywords": [
                  "github pull request",
                  "workflow automation",
                  "slack integration",
                  "notion integration",
                  "data summarization",
                  "weekly reporting",
                  "productivity boost",
                  "collaboration enhancement",
                  "business intelligence"
                ],
                "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                "generatedAt": "2025-08-17T14:42:19.411Z",
                "integrations": [
                  "GitHub",
                  "Slack",
                  "Notion"
                ],
                "businessValue": "Streamlined Reporting"
              },
              "buildPhases": [
                {
                  "type": "trigger",
                  "nodeIds": [
                    "scheduleTrigger_1"
                  ],
                  "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                },
                {
                  "type": "data_collection",
                  "nodeIds": [
                    "httpRequest_1"
                  ],
                  "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "code_1"
                  ],
                  "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                },
                {
                  "type": "data_processing",
                  "nodeIds": [
                    "openAi_1"
                  ],
                  "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                },
                {
                  "type": "notification",
                  "nodeIds": [
                    "slack_1",
                    "notion_1"
                  ],
                  "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                }
              ],
              "configAnalysis": {
                "nodes": [
                  {
                    "id": "scheduleTrigger_1",
                    "name": "Friday Trigger",
                    "type": "n8n-nodes-base.scheduleTrigger",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "rule",
                        "value": {
                          "interval": [
                            {
                              "field": "cronExpression",
                              "expression": "0 9 * * 5"
                            }
                          ]
                        },
                        "description": "rule"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "httpRequest_1",
                    "name": "Get GitHub PRs",
                    "type": "n8n-nodes-base.httpRequest",
                    "status": "partial",
                    "isReady": false,
                    "purpose": "Make HTTP API request",
                    "configured": [
                      {
                        "field": "authentication",
                        "value": "predefinedCredentialType",
                        "description": "authentication"
                      },
                      {
                        "field": "nodeCredentialType",
                        "value": "githubApi",
                        "description": "nodeCredentialType"
                      },
                      {
                        "field": "options",
                        "value": {
                          "response": {
                            "response": {
                              "responseFormat": "json"
                            }
                          }
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "url",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                      },
                      {
                        "field": "method",
                        "options": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "OPTIONS"
                        ],
                        "decision": "Provide required value",
                        "description": "Required field \"method\" is missing"
                      }
                    ],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "PREDEFINEDCREDENTIALTYPE",
                        "description": "Option: predefinedCredentialType",
                        "isAlternative": true,
                        "credentialType": "predefinedCredentialType"
                      },
                      {
                        "field": "credentials",
                        "variable": "GENERICCREDENTIALTYPE",
                        "description": "Option: genericCredentialType",
                        "isAlternative": true,
                        "credentialType": "genericCredentialType"
                      }
                    ]
                  },
                  {
                    "id": "code_1",
                    "name": "Transform PR Data",
                    "type": "n8n-nodes-base.code",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Execute custom JavaScript code",
                    "configured": [
                      {
                        "field": "jsCode",
                        "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                        "description": "jsCode"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "openAi_1",
                    "name": "Summarize PRs",
                    "type": "n8n-nodes-base.openAi",
                    "status": "configured",
                    "isReady": true,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "modelId",
                        "value": "gpt-3.5-turbo",
                        "description": "modelId"
                      },
                      {
                        "field": "messages",
                        "value": {
                          "values": [
                            {
                              "role": "system",
                              "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                            },
                            {
                              "role": "user",
                              "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                            }
                          ]
                        },
                        "description": "messages"
                      },
                      {
                        "field": "options",
                        "value": {
                          "maxTokens": 500,
                          "temperature": 0.7
                        },
                        "description": "options"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": []
                  },
                  {
                    "id": "slack_1",
                    "name": "Post to Slack",
                    "type": "n8n-nodes-base.slack",
                    "status": "needs_credentials",
                    "isReady": false,
                    "purpose": "Send messages to Slack",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "message",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "post",
                        "description": "operation"
                      },
                      {
                        "field": "channel",
                        "value": "#development",
                        "description": "channel"
                      },
                      {
                        "field": "text",
                        "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                        "description": "text"
                      },
                      {
                        "field": "otherOptions",
                        "value": {
                          "mrkdwn": true
                        },
                        "description": "otherOptions"
                      }
                    ],
                    "needsDecisions": [],
                    "needsCredentials": [
                      {
                        "field": "credentials",
                        "variable": "ACCESSTOKEN",
                        "description": "Option: accessToken",
                        "isAlternative": true,
                        "credentialType": "accessToken"
                      },
                      {
                        "field": "credentials",
                        "variable": "OAUTH2",
                        "description": "Option: oAuth2",
                        "isAlternative": true,
                        "credentialType": "oAuth2"
                      }
                    ]
                  },
                  {
                    "id": "notion_1",
                    "name": "Post to Notion",
                    "type": "n8n-nodes-base.notion",
                    "status": "needs_decisions",
                    "isReady": false,
                    "purpose": "Process data",
                    "configured": [
                      {
                        "field": "resource",
                        "value": "databasePage",
                        "description": "resource"
                      },
                      {
                        "field": "operation",
                        "value": "create",
                        "description": "operation"
                      },
                      {
                        "field": "title",
                        "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                        "description": "title"
                      },
                      {
                        "field": "propertiesUi",
                        "value": {
                          "propertyValues": [
                            {
                              "key": "Summary",
                              "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                            },
                            {
                              "key": "PR Count",
                              "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                            },
                            {
                              "key": "Week Start",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                            },
                            {
                              "key": "Week End",
                              "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                            }
                          ]
                        },
                        "description": "propertiesUi"
                      }
                    ],
                    "needsDecisions": [
                      {
                        "field": "databaseId",
                        "decision": "Replace placeholder value",
                        "description": "Current value \"your-database-id\" appears to be a placeholder"
                      }
                    ],
                    "needsCredentials": []
                  }
                ],
                "timestamp": "2025-08-17T14:43:05.553Z",
                "isComplete": false,
                "totalNodes": 6,
                "configuredNodes": 3,
                "missingCredentials": [
                  "PREDEFINEDCREDENTIALTYPE",
                  "GENERICCREDENTIALTYPE",
                  "ACCESSTOKEN",
                  "OAUTH2"
                ]
              },
              "operationHistory": [
                {
                  "type": "completePhase",
                  "phase": "discovery",
                  "timestamp": "2025-08-17T14:42:17.393Z"
                },
                {
                  "node": {
                    "id": "task_node_1",
                    "type": "nodes-base.httpRequest",
                    "config": {
                      "url": "",
                      "method": "GET",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "retryOnFail": true,
                      "authentication": "none",
                      "alwaysOutputData": true,
                      "waitBetweenTries": 1000
                    },
                    "purpose": "Make a simple GET request to retrieve data from an API",
                    "displayName": "get api data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_4",
                    "type": "nodes-base.slack",
                    "config": {
                      "text": "",
                      "channel": "",
                      "onError": "continueRegularOutput",
                      "maxTries": 2,
                      "resource": "message",
                      "operation": "post",
                      "parameters": {},
                      "retryOnFail": true,
                      "waitBetweenTries": 2000
                    },
                    "purpose": "Send a message to Slack channel",
                    "displayName": "send slack message",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_4",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_3",
                    "type": "nodes-base.openAi",
                    "config": {
                      "modelId": "gpt-3.5-turbo",
                      "onError": "continueRegularOutput",
                      "maxTries": 3,
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": ""
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message",
                      "retryOnFail": true,
                      "alwaysOutputData": true,
                      "waitBetweenTries": 5000
                    },
                    "purpose": "Send a message to an AI model and get response",
                    "displayName": "chat with ai",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_3",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "task_node_2",
                    "type": "nodes-base.code",
                    "config": {
                      "jsCode": "// Transform each item\nconst results = [];\n\nfor (const item of items) {\n  results.push({\n    json: {\n      // Transform your data here\n      id: item.json.id,\n      processedAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;",
                      "language": "javaScript"
                    },
                    "purpose": "Transform data structure using JavaScript",
                    "displayName": "transform data",
                    "isPreConfigured": true
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "task_node_2",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_1",
                    "type": "nodes-base.scheduleTrigger",
                    "purpose": "Trigger workflow every Friday to collect PR data and post summaries"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_1",
                  "timestamp": "2025-08-17T14:42:19.412Z"
                },
                {
                  "node": {
                    "id": "search_node_2",
                    "type": "nodes-base.notion",
                    "purpose": "Post summarized PR data to Notion database or page"
                  },
                  "type": "discoverNode",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "selectNode",
                  "nodeId": "search_node_2",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "seo": {
                    "slug": "automate-weekly-github-pr-summaries-721374",
                    "title": "Streamline GitHub PR Tracking and Reporting with Workflow...",
                    "category": "Automation",
                    "keywords": [
                      "github pull request",
                      "workflow automation",
                      "slack integration",
                      "notion integration",
                      "data summarization",
                      "weekly reporting",
                      "productivity boost",
                      "collaboration enhancement",
                      "business intelligence"
                    ],
                    "description": "Automatically collect and summarize GitHub pull request data, then post weekly updates to Slack and Notion for seamless collaboration and visibility.",
                    "generatedAt": "2025-08-17T14:42:19.411Z",
                    "integrations": [
                      "GitHub",
                      "Slack",
                      "Notion"
                    ],
                    "businessValue": "Streamlined Reporting"
                  },
                  "type": "setSEOMetadata",
                  "timestamp": "2025-08-17T14:42:19.527Z"
                },
                {
                  "type": "setPhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:34.406Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Retrieve merged PR titles from GitHub API for weekly summary",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&base=main&sort=updated&direction=desc&per_page=100",
                      "method": "GET",
                      "sendQuery": true,
                      "sendHeaders": true,
                      "authentication": "predefinedCredentialType",
                      "queryParameters": {
                        "parameters": [
                          {
                            "name": "since",
                            "value": "{{ $now.minus({days: 7}).toISO() }}"
                          }
                        ]
                      },
                      "headerParameters": {
                        "parameters": [
                          {
                            "name": "Accept",
                            "value": "application/vnd.github.v3+json"
                          },
                          {
                            "name": "User-Agent",
                            "value": "n8n-workflow"
                          }
                        ]
                      },
                      "nodeCredentialType": "githubApi"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 1000
                  },
                  "nodeId": "task_node_1",
                  "purpose": "Make a simple GET request to retrieve data from an API",
                  "nodeType": "nodes-base.httpRequest",
                  "timestamp": "2025-08-17T14:42:34.593Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Send weekly summary of merged PR titles to Slack channel",
                    "onError": "continueRegularOutput",
                    "maxTries": 2,
                    "parameters": {
                      "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) }}*\n\n{{ $json.summary }}\n\n_Generated automatically from merged PRs this week_ 🚀",
                      "select": "channel",
                      "resource": "message",
                      "channelId": "{{ $('Schedule Trigger').item.json.slackChannel || '#dev-updates' }}",
                      "operation": "post",
                      "parameters": {}
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "waitBetweenTries": 2000
                  },
                  "nodeId": "task_node_4",
                  "purpose": "Send a message to Slack channel",
                  "nodeType": "nodes-base.slack",
                  "timestamp": "2025-08-17T14:42:34.704Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_4",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Summarize merged PR titles from GitHub into a concise weekly summary for Slack and Notion posting",
                    "onError": "continueRegularOutput",
                    "maxTries": 3,
                    "parameters": {
                      "modelId": "gpt-3.5-turbo",
                      "messages": {
                        "values": [
                          {
                            "role": "user",
                            "content": "Please create a concise weekly summary of the following merged pull request titles from our GitHub repository. Format it as a brief overview highlighting the key changes, improvements, and fixes. Keep it professional but engaging for a team update:\n\n{{ $json.prTitles }}"
                          }
                        ]
                      },
                      "resource": "chat",
                      "operation": "message"
                    },
                    "retryOnFail": true,
                    "typeVersion": "1",
                    "alwaysOutputData": true,
                    "waitBetweenTries": 5000
                  },
                  "nodeId": "task_node_3",
                  "purpose": "Send a message to an AI model and get response",
                  "nodeType": "nodes-base.openAi",
                  "timestamp": "2025-08-17T14:42:34.823Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_3",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Transform GitHub PR data into structured summaries for Slack and Notion posting",
                    "parameters": {
                      "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\n\n// Group PRs by repository or category if needed\nconst prSummary = {\n  totalPRs: items.length,\n  repositories: {},\n  summaryText: '',\n  weekRange: ''\n};\n\n// Calculate week range\nconst now = new Date();\nconst weekStart = new Date(now.setDate(now.getDate() - 7));\nconst weekEnd = new Date();\nprSummary.weekRange = `${weekStart.toLocaleDateString()} - ${weekEnd.toLocaleDateString()}`;\n\n// Process each PR\nfor (const item of items) {\n  const pr = item.json;\n  const repoName = pr.repository?.name || pr.base?.repo?.name || 'Unknown';\n  \n  if (!prSummary.repositories[repoName]) {\n    prSummary.repositories[repoName] = {\n      count: 0,\n      titles: []\n    };\n  }\n  \n  prSummary.repositories[repoName].count++;\n  prSummary.repositories[repoName].titles.push({\n    title: pr.title,\n    author: pr.user?.login || pr.merged_by?.login || 'Unknown',\n    mergedAt: pr.merged_at,\n    url: pr.html_url\n  });\n}\n\n// Create summary text for Slack\nlet summaryLines = [`📊 Weekly PR Summary (${prSummary.weekRange})`, `Total PRs merged: ${prSummary.totalPRs}`, ''];\n\nfor (const [repo, data] of Object.entries(prSummary.repositories)) {\n  summaryLines.push(`🔧 ${repo} (${data.count} PRs):`);\n  data.titles.forEach(pr => {\n    summaryLines.push(`  • ${pr.title} by @${pr.author}`);\n  });\n  summaryLines.push('');\n}\n\nprSummary.summaryText = summaryLines.join('\\n');\n\n// Create structured data for Notion\nconst notionData = {\n  title: `PR Summary - Week of ${prSummary.weekRange}`,\n  totalCount: prSummary.totalPRs,\n  repositories: Object.entries(prSummary.repositories).map(([name, data]) => ({\n    name,\n    count: data.count,\n    prs: data.titles\n  })),\n  generatedAt: new Date().toISOString()\n};\n\nresults.push({\n  json: {\n    // For Slack posting\n    slackMessage: prSummary.summaryText,\n    // For Notion posting\n    notionData: notionData,\n    // Raw summary data\n    summary: prSummary,\n    processedAt: new Date().toISOString()\n  }\n});\n\nreturn results;",
                      "language": "javaScript"
                    }
                  },
                  "nodeId": "task_node_2",
                  "purpose": "Transform data structure using JavaScript",
                  "nodeType": "nodes-base.code",
                  "timestamp": "2025-08-17T14:42:34.993Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "task_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.114Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "reasoning": "Configured Schedule Trigger to run every Friday at 9 AM using cron expression '0 9 * * 5' (0 minutes, 9 hours, any day of month, any month, Friday)",
                  "timestamp": "2025-08-17T14:42:35.114Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Triggers the workflow every Friday to collect merged PR titles and post summaries to Slack and Notion",
                    "parameters": {
                      "rule": {
                        "interval": [
                          {
                            "field": "cronExpression",
                            "expression": "0 9 * * 5"
                          }
                        ]
                      },
                      "notice": ""
                    },
                    "typeVersion": "1.2"
                  },
                  "nodeId": "search_node_1",
                  "purpose": "Trigger workflow every Friday to collect PR data and post summaries",
                  "nodeType": "nodes-base.scheduleTrigger",
                  "timestamp": "2025-08-17T14:42:35.235Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.397Z"
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "reasoning": "Configured as a database page creation to store weekly PR summaries in a structured format",
                  "timestamp": "2025-08-17T14:42:35.397Z",
                  "operationIndex": 0
                },
                {
                  "type": "configureNode",
                  "config": {
                    "notes": "Posts summarized PR data to a Notion database page for weekly tracking",
                    "parameters": {
                      "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                      "resource": "databasePage",
                      "operation": "create",
                      "databaseId": {
                        "mode": "url",
                        "value": "={{ $vars.notionDatabaseUrl }}"
                      },
                      "propertiesUi": {
                        "propertyValues": [
                          {
                            "key": "Summary",
                            "textContent": "={{ $json.summary }}"
                          },
                          {
                            "key": "Date",
                            "dateValue": "={{ new Date().toISOString().split('T')[0] }}"
                          },
                          {
                            "key": "PR Count",
                            "numberValue": "={{ $json.prCount }}"
                          }
                        ]
                      }
                    },
                    "typeVersion": "2.2"
                  },
                  "nodeId": "search_node_2",
                  "purpose": "Post summarized PR data to Notion database or page",
                  "nodeType": "nodes-base.notion",
                  "timestamp": "2025-08-17T14:42:35.527Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "search_node_2",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "completePhase",
                  "phase": "configuration",
                  "timestamp": "2025-08-17T14:42:35.651Z"
                },
                {
                  "type": "setPhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.554Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.3
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                          "channel": "#development",
                          "resource": "message",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.1
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.1
                      }
                    ],
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:05.734Z"
                },
                {
                  "type": "setBuildPhases",
                  "phases": [
                    {
                      "type": "trigger",
                      "nodeIds": [
                        "scheduleTrigger_1"
                      ],
                      "description": "Initiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                    },
                    {
                      "type": "data_collection",
                      "nodeIds": [
                        "httpRequest_1"
                      ],
                      "description": "Fetches merged pull requests from GitHub API for the past week using authenticated requests."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "code_1"
                      ],
                      "description": "Filters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization."
                    },
                    {
                      "type": "data_processing",
                      "nodeIds": [
                        "openAi_1"
                      ],
                      "description": "Uses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                    },
                    {
                      "type": "notification",
                      "nodeIds": [
                        "slack_1",
                        "notion_1"
                      ],
                      "description": "Simultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                    }
                  ],
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setConfigAnalysis",
                  "analysis": {
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "rule",
                            "value": {
                              "interval": [
                                {
                                  "field": "cronExpression",
                                  "expression": "0 9 * * 5"
                                }
                              ]
                            },
                            "description": "rule"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "status": "partial",
                        "isReady": false,
                        "purpose": "Make HTTP API request",
                        "configured": [
                          {
                            "field": "authentication",
                            "value": "predefinedCredentialType",
                            "description": "authentication"
                          },
                          {
                            "field": "nodeCredentialType",
                            "value": "githubApi",
                            "description": "nodeCredentialType"
                          },
                          {
                            "field": "options",
                            "value": {
                              "response": {
                                "response": {
                                  "responseFormat": "json"
                                }
                              }
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "url",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100\" appears to be a placeholder"
                          },
                          {
                            "field": "method",
                            "options": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "PATCH",
                              "HEAD",
                              "OPTIONS"
                            ],
                            "decision": "Provide required value",
                            "description": "Required field \"method\" is missing"
                          }
                        ],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "PREDEFINEDCREDENTIALTYPE",
                            "description": "Option: predefinedCredentialType",
                            "isAlternative": true,
                            "credentialType": "predefinedCredentialType"
                          },
                          {
                            "field": "credentials",
                            "variable": "GENERICCREDENTIALTYPE",
                            "description": "Option: genericCredentialType",
                            "isAlternative": true,
                            "credentialType": "genericCredentialType"
                          }
                        ]
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Execute custom JavaScript code",
                        "configured": [
                          {
                            "field": "jsCode",
                            "value": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;",
                            "description": "jsCode"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "status": "configured",
                        "isReady": true,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "modelId",
                            "value": "gpt-3.5-turbo",
                            "description": "modelId"
                          },
                          {
                            "field": "messages",
                            "value": {
                              "values": [
                                {
                                  "role": "system",
                                  "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                                },
                                {
                                  "role": "user",
                                  "content": "Create a weekly summary for these {{ $json.count }} merged PRs:\n\n{{ $json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n') }}\n\nMake it engaging and highlight key themes or improvements."
                                }
                              ]
                            },
                            "description": "messages"
                          },
                          {
                            "field": "options",
                            "value": {
                              "maxTokens": 500,
                              "temperature": 0.7
                            },
                            "description": "options"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": []
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "status": "needs_credentials",
                        "isReady": false,
                        "purpose": "Send messages to Slack",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "message",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "post",
                            "description": "operation"
                          },
                          {
                            "field": "channel",
                            "value": "#development",
                            "description": "channel"
                          },
                          {
                            "field": "text",
                            "value": "📊 *Weekly PR Summary - {{ new Date().toLocaleDateString() }}*\n\n{{ $('Summarize PRs').item.json.message.content }}\n\n*Total PRs Merged:* {{ $('Transform PR Data').item.json.count }}\n*Period:* {{ $('Transform PR Data').item.json.week_start }} to {{ $('Transform PR Data').item.json.week_end }}",
                            "description": "text"
                          },
                          {
                            "field": "otherOptions",
                            "value": {
                              "mrkdwn": true
                            },
                            "description": "otherOptions"
                          }
                        ],
                        "needsDecisions": [],
                        "needsCredentials": [
                          {
                            "field": "credentials",
                            "variable": "ACCESSTOKEN",
                            "description": "Option: accessToken",
                            "isAlternative": true,
                            "credentialType": "accessToken"
                          },
                          {
                            "field": "credentials",
                            "variable": "OAUTH2",
                            "description": "Option: oAuth2",
                            "isAlternative": true,
                            "credentialType": "oAuth2"
                          }
                        ]
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "status": "needs_decisions",
                        "isReady": false,
                        "purpose": "Process data",
                        "configured": [
                          {
                            "field": "resource",
                            "value": "databasePage",
                            "description": "resource"
                          },
                          {
                            "field": "operation",
                            "value": "create",
                            "description": "operation"
                          },
                          {
                            "field": "title",
                            "value": "Weekly PR Summary - {{ new Date().toLocaleDateString() }}",
                            "description": "title"
                          },
                          {
                            "field": "propertiesUi",
                            "value": {
                              "propertyValues": [
                                {
                                  "key": "Summary",
                                  "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                                },
                                {
                                  "key": "PR Count",
                                  "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                                },
                                {
                                  "key": "Week Start",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                                },
                                {
                                  "key": "Week End",
                                  "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                                }
                              ]
                            },
                            "description": "propertiesUi"
                          }
                        ],
                        "needsDecisions": [
                          {
                            "field": "databaseId",
                            "decision": "Replace placeholder value",
                            "description": "Current value \"your-database-id\" appears to be a placeholder"
                          }
                        ],
                        "needsCredentials": []
                      }
                    ],
                    "timestamp": "2025-08-17T14:43:05.553Z",
                    "isComplete": false,
                    "totalNodes": 6,
                    "configuredNodes": 3,
                    "missingCredentials": [
                      "PREDEFINEDCREDENTIALTYPE",
                      "GENERICCREDENTIALTYPE",
                      "ACCESSTOKEN",
                      "OAUTH2"
                    ]
                  },
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "completePhase",
                  "phase": "building",
                  "timestamp": "2025-08-17T14:43:05.735Z"
                },
                {
                  "type": "setPhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:22.543Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "openAi_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "slack_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "scheduleTrigger_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": false,
                    "errors": [
                      {
                        "nodeId": "notion_1",
                        "message": "Node replaced entirely",
                        "severity": "error"
                      }
                    ]
                  },
                  "reasoning": "Node replaced to fix validation errors",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "scheduleTrigger_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "httpRequest_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "code_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "openAi_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "slack_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:22.763Z"
                },
                {
                  "type": "validateNode",
                  "nodeId": "notion_1",
                  "result": {
                    "valid": true,
                    "errors": []
                  },
                  "reasoning": "Node passed all validation checks",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          250,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.2
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          550,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          850,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1150,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.1
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1450,
                          200
                        ],
                        "parameters": {
                          "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                          "select": "channel",
                          "resource": "message",
                          "channelId": "#development",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.3
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1450,
                          400
                        ],
                        "parameters": {
                          "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.2
                      }
                    ],
                    "valid": true,
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "completePhase",
                  "phase": "validation",
                  "timestamp": "2025-08-17T14:43:23.024Z"
                },
                {
                  "type": "setPhase",
                  "phase": "documentation",
                  "timestamp": "2025-08-17T14:43:23.512Z"
                },
                {
                  "type": "setWorkflow",
                  "workflow": {
                    "name": "Weekly GitHub PR Summary to Slack and Notion",
                    "nodes": [
                      {
                        "id": "scheduleTrigger_1",
                        "name": "Friday Trigger",
                        "type": "n8n-nodes-base.scheduleTrigger",
                        "onError": "stopWorkflow",
                        "position": [
                          470,
                          300
                        ],
                        "parameters": {
                          "rule": {
                            "interval": [
                              {
                                "field": "cronExpression",
                                "expression": "0 9 * * 5"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.2
                      },
                      {
                        "id": "httpRequest_1",
                        "name": "Get GitHub PRs",
                        "type": "n8n-nodes-base.httpRequest",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          870,
                          300
                        ],
                        "parameters": {
                          "url": "https://api.github.com/repos/OWNER/REPO/pulls?state=closed&sort=updated&direction=desc&per_page=100",
                          "options": {
                            "response": {
                              "response": {
                                "responseFormat": "json"
                              }
                            }
                          },
                          "authentication": "predefinedCredentialType",
                          "nodeCredentialType": "githubApi"
                        },
                        "typeVersion": 4.2
                      },
                      {
                        "id": "code_1",
                        "name": "Transform PR Data",
                        "type": "n8n-nodes-base.code",
                        "onError": "continueRegularOutput",
                        "position": [
                          1270,
                          300
                        ],
                        "parameters": {
                          "jsCode": "// Transform GitHub PR data into structured summaries\nconst results = [];\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\nfor (const item of $input.all()) {\n  const prs = item.json;\n  const mergedPRs = prs.filter(pr => {\n    if (!pr.merged_at) return false;\n    const mergedDate = new Date(pr.merged_at);\n    return mergedDate >= oneWeekAgo;\n  });\n  \n  const prTitles = mergedPRs.map(pr => ({\n    title: pr.title,\n    author: pr.user.login,\n    merged_at: pr.merged_at,\n    html_url: pr.html_url\n  }));\n  \n  results.push({\n    json: {\n      merged_prs: prTitles,\n      count: prTitles.length,\n      week_start: oneWeekAgo.toISOString().split('T')[0],\n      week_end: new Date().toISOString().split('T')[0]\n    }\n  });\n}\n\nreturn results;"
                        },
                        "typeVersion": 2
                      },
                      {
                        "id": "openAi_1",
                        "name": "Summarize PRs",
                        "type": "n8n-nodes-base.openAi",
                        "onError": "continueRegularOutput",
                        "maxTries": 3,
                        "position": [
                          1470,
                          300
                        ],
                        "parameters": {
                          "modelId": "gpt-3.5-turbo",
                          "options": {
                            "maxTokens": 500,
                            "temperature": 0.7
                          },
                          "messages": {
                            "values": [
                              {
                                "role": "system",
                                "content": "You are a technical writer creating weekly PR summaries. Create a concise, professional summary of the merged pull requests."
                              },
                              {
                                "role": "user",
                                "content": "{{ `Create a weekly summary for these ${$json.count} merged PRs:\n\n${$json.merged_prs.map(pr => `- ${pr.title} (by ${pr.author})`).join('\\n')}\n\nMake it engaging and highlight key themes or improvements.` }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 1.1
                      },
                      {
                        "id": "slack_1",
                        "name": "Post to Slack",
                        "type": "n8n-nodes-base.slack",
                        "onError": "continueRegularOutput",
                        "maxTries": 2,
                        "position": [
                          1870,
                          250
                        ],
                        "parameters": {
                          "text": "{{ `📊 *Weekly PR Summary - ${new Date().toLocaleDateString()}*\n\n${$('Summarize PRs').item.json.message.content}\n\n*Total PRs Merged:* ${$('Transform PR Data').item.json.count}\n*Period:* ${$('Transform PR Data').item.json.week_start} to ${$('Transform PR Data').item.json.week_end}` }}",
                          "select": "channel",
                          "resource": "message",
                          "channelId": "#development",
                          "operation": "post",
                          "otherOptions": {
                            "mrkdwn": true
                          }
                        },
                        "typeVersion": 2.3
                      },
                      {
                        "id": "notion_1",
                        "name": "Post to Notion",
                        "type": "n8n-nodes-base.notion",
                        "onError": "continueRegularOutput",
                        "position": [
                          1870,
                          400
                        ],
                        "parameters": {
                          "title": "{{ 'Weekly PR Summary - ' + new Date().toLocaleDateString() }}",
                          "resource": "databasePage",
                          "operation": "create",
                          "databaseId": "your-database-id",
                          "propertiesUi": {
                            "propertyValues": [
                              {
                                "key": "Summary",
                                "textContent": "{{ $('Summarize PRs').item.json.message.content }}"
                              },
                              {
                                "key": "PR Count",
                                "numberValue": "{{ $('Transform PR Data').item.json.count }}"
                              },
                              {
                                "key": "Week Start",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_start }}"
                              },
                              {
                                "key": "Week End",
                                "dateValue": "{{ $('Transform PR Data').item.json.week_end }}"
                              }
                            ]
                          }
                        },
                        "typeVersion": 2.2
                      },
                      {
                        "id": "sticky_triggers_1755441803511",
                        "name": "Triggers Documentation",
                        "type": "n8n-nodes-base.stickyNote",
                        "position": [
                          390,
                          10
                        ],
                        "parameters": {
                          "color": 5,
                          "width": 310,
                          "height": 530,
                          "content": "## 📥 Triggers\nInitiates the workflow every Friday at 9 AM to begin the weekly PR summary process."
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "sticky_inputs_1755441803512",
                        "name": "Inputs Documentation",
                        "type": "n8n-nodes-base.stickyNote",
                        "position": [
                          790,
                          10
                        ],
                        "parameters": {
                          "color": 5,
                          "width": 310,
                          "height": 530,
                          "content": "## 📊 Inputs\nFetches merged pull requests from GitHub API for the past week using authenticated requests."
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "sticky_transforms_1755441803512",
                        "name": "Transform Documentation",
                        "type": "n8n-nodes-base.stickyNote",
                        "position": [
                          1230,
                          10
                        ],
                        "parameters": {
                          "color": 5,
                          "width": 430,
                          "height": 530,
                          "content": "## ⚙️ Transform\nFilters PRs to only include those merged in the last 7 days and transforms the data into a structured format for summarization.\n\nUses OpenAI to generate a concise, professional summary of the merged pull requests highlighting key themes and improvements."
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "sticky_outputs_1755441803512",
                        "name": "Outputs Documentation",
                        "type": "n8n-nodes-base.stickyNote",
                        "position": [
                          1790,
                          10
                        ],
                        "parameters": {
                          "color": 6,
                          "width": 310,
                          "height": 530,
                          "content": "## 🚀 Outputs\nSimultaneously posts the weekly PR summary to both Slack channel and Notion database for team visibility and record keeping."
                        },
                        "typeVersion": 1
                      },
                      {
                        "id": "sticky_promo_1755441803512",
                        "name": "Workflow Overview",
                        "type": "n8n-nodes-base.stickyNote",
                        "position": [
                          50,
                          10
                        ],
                        "parameters": {
                          "color": 4,
                          "width": 280,
                          "height": 530,
                          "content": "## 🚀 Grow your AI business\n\nNeed help in implementing this workflow for your business? Join the Ghost Team community.\n\nThis workflow is made with 💚 by Ghost Team."
                        },
                        "typeVersion": 1
                      }
                    ],
                    "valid": true,
                    "settings": {
                      "executionOrder": "v1",
                      "saveManualExecutions": true,
                      "saveDataErrorExecution": "all",
                      "saveDataSuccessExecution": "all"
                    },
                    "connections": {
                      "Summarize PRs": {
                        "main": [
                          [
                            {
                              "node": "Post to Slack",
                              "type": "main",
                              "index": 0
                            },
                            {
                              "node": "Post to Notion",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Friday Trigger": {
                        "main": [
                          [
                            {
                              "node": "Get GitHub PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Get GitHub PRs": {
                        "main": [
                          [
                            {
                              "node": "Transform PR Data",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      },
                      "Transform PR Data": {
                        "main": [
                          [
                            {
                              "node": "Summarize PRs",
                              "type": "main",
                              "index": 0
                            }
                          ]
                        ]
                      }
                    }
                  },
                  "timestamp": "2025-08-17T14:43:23.712Z"
                },
                {
                  "type": "completePhase",
                  "phase": "documentation",
                  "timestamp": "2025-08-17T14:43:23.712Z"
                }
              ],
              "pendingClarifications": [],
              "clarificationHistory": []
            }
          }
        },
        "removed": [],
        "unchanged": [
          "sessionId",
          "createdAt"
        ]
      }
    }
  },
  "summary": {
    "totalNodes": 11,
    "totalConnections": 4,
    "validationAttempts": 3,
    "errorsFixed": 2,
    "stickyNotesAdded": 5,
    "performanceScore": 20,
    "qualityScore": 115,
    "completenessScore": 100
  },
  "optimizationSuggestions": [
    "Consider optimizing discovery phase (took 18061ms)",
    "Consider optimizing configuration phase (took 16130ms)",
    "Consider optimizing building phase (took 30221ms)",
    "Consider optimizing validation phase (took 17269ms)",
    "High validation attempts detected. Consider improving initial node configuration."
  ],
  "errorPatterns": []
}