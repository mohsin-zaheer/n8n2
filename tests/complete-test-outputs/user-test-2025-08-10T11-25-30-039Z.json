{
  "name": "Value-Based Website Scraping and Notification Workflow",
  "nodes": [
    {
      "id": "webhook_1",
      "type": "n8n-nodes-base.webhook",
      "position": [
        250,
        300
      ],
      "parameters": {
        "path": "webhook",
        "httpMethod": "POST",
        "responseData": "allEntries",
        "responseMode": "lastNode"
      },
      "name": "Webhook Trigger",
      "typeVersion": 2,
      "onError": "stopWorkflow",
      "alwaysOutputData": true
    },
    {
      "id": "if_1",
      "type": "n8n-nodes-base.if",
      "position": [
        550,
        300
      ],
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "id": "condition_1",
              "leftValue": "={{ $json.value }}",
              "rightValue": 100,
              "operation": {
                "type": "number",
                "operation": "gt"
              }
            }
          ]
        }
      },
      "name": "Check Value",
      "typeVersion": 2.2,
      "onError": "continueRegularOutput"
    },
    {
      "id": "httpRequest_1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        850,
        200
      ],
      "parameters": {
        "url": "https://example.com/products",
        "method": "GET",
        "options": {
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "autodetect"
            }
          }
        }
      },
      "name": "Scrape Website",
      "typeVersion": 4.2,
      "onError": "continueErrorOutput",
      "retryOnFail": true,
      "maxTries": 3
    },
    {
      "id": "emailSend_1",
      "type": "n8n-nodes-base.emailSend",
      "position": [
        1150,
        200
      ],
      "parameters": {
        "text": "{{ `Product pricing data scraped from website:\n\n${$json.data}` }}",
        "subject": "Product Pricing Data - Value Above 100",
        "toEmail": "recipient@example.com",
        "fromEmail": "sender@example.com"
      },
      "name": "Send Email",
      "typeVersion": 2.1,
      "onError": "continueRegularOutput",
      "retryOnFail": true,
      "maxTries": 3,
      "alwaysOutputData": true
    },
    {
      "id": "slack_1",
      "type": "n8n-nodes-base.slack",
      "position": [
        850,
        400
      ],
      "parameters": {
        "text": "Alert: Value is below 100",
        "channelId": "#alerts",
        "resource": "message",
        "operation": "post",
        "select": "channel"
      },
      "name": "Send Slack Message",
      "typeVersion": 2.3,
      "onError": "continueRegularOutput",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 1000
    },
    {
      "id": "sticky_triggers_1754825129647",
      "name": "Triggers Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        210,
        160
      ],
      "parameters": {
        "content": "## üì• Triggers\nWebhook receives external data with a value to be evaluated. This serves as the entry point for the workflow execution.",
        "height": 480,
        "width": 230,
        "color": 6
      }
    },
    {
      "id": "sticky_inputs_1754825129647",
      "name": "Inputs Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        810,
        60
      ],
      "parameters": {
        "content": "## üìä Inputs\nScrapes the target website to collect product pricing data when the value exceeds 100. This data will be included in the email notification.",
        "height": 480,
        "width": 230,
        "color": 5
      }
    },
    {
      "id": "sticky_transforms_1754825129647",
      "name": "Transform Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        510,
        160
      ],
      "parameters": {
        "content": "## ‚öôÔ∏è Transform\nEvaluates the incoming value from the webhook to determine the workflow path. Routes to scraping/email if above 100, or Slack notification if below 100.",
        "height": 480,
        "width": 230,
        "color": 4
      }
    },
    {
      "id": "sticky_outputs_1754825129647",
      "name": "Outputs Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        810,
        60
      ],
      "parameters": {
        "content": "## üöÄ Outputs\nSends notifications based on the value condition - either an email with scraped pricing data for values above 100, or a Slack alert for values below 100.",
        "height": 480,
        "width": 530,
        "color": 7
      }
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Check Value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Value": {
      "main": [
        [
          {
            "node": "Scrape Website",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Slack Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Website": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-10T11:25:30.039Z",
  "versionId": null,
  "__metadata": {
    "prompt": "create a workflow that based on a webhook trigger measures the value and if its above 100, we scrape a website for all our product pricing data and send all that in an email. if its below 100 we send a slack message saying below 100",
    "testName": "User Test",
    "generatedAt": "2025-08-10T11:25:30.039Z",
    "phases": {
      "discovery": true,
      "configuration": true,
      "building": true,
      "validation": true,
      "documentation": true
    },
    "validationAttempts": 3,
    "stickyNotesAdded": 4
  }
}